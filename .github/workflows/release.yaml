name: CD

on:
  push:
    branches:
      - master
      - 'release-*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('package.json') }}

      - name: Install 🔧
        run: yarn install --immutable

      - name: Build
        run: yarn build

  publish:
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') &&
          (
            (github.ref == 'refs/heads/master' && contains(github.event.head_commit.message, '[release]')) ||
            (startsWith(github.ref, 'refs/heads/release-') &&
              (
                startsWith(github.event.head_commit.message, 'fix:') ||
                startsWith(github.event.head_commit.message, 'feat:') ||
                contains(github.event.head_commit.message, '[release]')
              )
            )
          )
        }}
    runs-on: ubuntu-latest
    environment: CD
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('package.json') }}

      - name: Install 🔧
        run: yarn install --immutable

      - name: Build
        run: yarn build

      - name: Build doc
        run: yarn docs:bundle


      - name: Lerna env config
        run: |
          git config user.email "cognite-cicd@users.noreply.github.com"
          git config user.name  "Cognite CICD"
          git remote set-url origin "https://${{ secrets.GH_LERNA_TOKEN }}@github.com/${{ github.repository }}.git"
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_PUBLISH_TOKEN }}" >> .npmrc
        env:
          GH_LERNA_TOKEN:    ${{ secrets.GH_LERNA_TOKEN }}
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      # ────────────────────────────────────────────────────────
      # 1️⃣  Master: version bump via PR (no direct push)
      # ────────────────────────────────────────────────────────
      - name: Generate version bump (no-push)
        if: github.ref == 'refs/heads/master'
        run: |
          yarn lerna version \
            --conventional-commits \
            --yes \
            --force-publish \
            --no-push

      - name: Create bump PR
        if: github.ref == 'refs/heads/master'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_LERNA_TOKEN }}
          commit-message: "chore(release): bump versions [skip ci]"
          branch: "release/bumps/${{ github.sha }}"
          title: "chore(release): bump versions"
          body: |
            This PR was auto-generated to bump package versions.
          labels: auto-release

      # ────────────────────────────────────────────────────────
      # 2️⃣  Master: remove RC tags via PR after RC-branch merge
      # ────────────────────────────────────────────────────────
      - name: Stage RC-tag removal
        if: >-
          github.ref == 'refs/heads/master' &&
          contains(github.event.head_commit.message, 'Merge pull request') &&
          contains(github.event.head_commit.message, 'release-') &&
          contains(github.event.head_commit.message, '[release]')
        run: |
            node scripts/remove-rc-tags.js
            node scripts/remove-rc-tags.js
            git config --global user.email "cognite-cicd@users.noreply.github.com"
            git config --global user.name "Cognite CICD"
            node scripts/remove-rc-tags.js
            git config --global user.email "cognite-cicd@users.noreply.github.com"
            git config --global user.name "Cognite CICD"
            git add packages/*/package.json

      - name: Create remove-rc PR
        id: create-remove-rc-pr
        if: >-
          github.ref == 'refs/heads/master' &&
          contains(github.event.head_commit.message, 'Merge pull request') &&
          contains(github.event.head_commit.message, 'release-') &&
          contains(github.event.head_commit.message, '[release]')
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_LERNA_TOKEN }}
          commit-message: "chore(release): remove rc tags [skip ci]"
          branch: "release/remove-rc/${{ github.sha }}"
          title: "chore(release): remove rc tags"
          body: |
            This PR automatically removes “rc” prerelease tags after a release merge.
          labels: auto-release

      - name: Auto-merge remove-rc PR
        if: steps.create-remove-rc-pr.outputs.pull-request-number
        uses: peter-evans/enable-pull-request-automerge@v1
        with:
          pull-request-number: ${{ steps.create-remove-rc-pr.outputs.pull-request-number }}
          merge-method: squash
          token: ${{ secrets.GH_LERNA_TOKEN }}

      # ────────────────────────────────────────────────────────
      # 3️⃣  release-* branches: original prerelease bump
      # ────────────────────────────────────────────────────────
      - name: Pre-release bump on release-* branches
        if: startsWith(github.ref, 'refs/heads/release-')
        run: |
          yarn lerna version \
            --conventional-commits \
            --conventional-prerelease \
            --preid rc \
            --create-release github \
            --no-private \
            --yes

      # ────────────────────────────────────────────────────────
      # 4️⃣  Lerna publish (unchanged)
      # ────────────────────────────────────────────────────────
      - name: Lerna Publish
        if: contains(github.event.head_commit.message, '[release]')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN:      ${{ secrets.NPM_PUBLISH_TOKEN }}
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/master" ]]; then
            yarn lerna publish from-package --yes --no-git-reset --no-verify-access
          else
            yarn lerna publish from-package --pre-dist-tag rc --yes --no-git-reset --no-verify-access
          fi
