name: CI

on:
 pull_request:
    branches:
      - master
      - release-*

jobs:
  codecov:
    runs-on: ubuntu-latest

    env:
      COGNITE_PROJECT: cognitesdk-js
      COGNITE_CREDENTIALS: ${{secrets.COGNITE_CREDENTIALS}}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('package.json') }}

      - name: Install ðŸ”§
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Test/Codecov
        run: yarn test:codecov

      - name: Codecov
        uses: codecov/codecov-action@v1.0.11
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  snippets:
    runs-on: ubuntu-latest

    env:
      COGNITE_PROJECT: cognitesdk-js
      COGNITE_CREDENTIALS: ${{secrets.COGNITE_CREDENTIALS}}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('package.json') }}

      - name: Install ðŸ”§
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Test snippets
        run: yarn test-snippets

  samples:
    runs-on: ubuntu-latest

    env:
      COGNITE_PROJECT: cognitesdk-js
      COGNITE_CREDENTIALS: ${{secrets.COGNITE_CREDENTIALS}}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('package.json') }}

      - name: Install ðŸ”§
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Test samples
        run: yarn test-samples

  lint:
    runs-on: ubuntu-latest

    env:
      COGNITE_PROJECT: cognitesdk-js
      COGNITE_CREDENTIALS: ${{secrets.COGNITE_CREDENTIALS}}

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('package.json') }}

      - name: Install ðŸ”§
        run: yarn install --frozen-lockfile

      - name: validateDocLinks
        run: yarn validateDocLinks

      - name: Lint
        run: yarn lint

      - name: Build
        run: yarn build

  tests:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14, 16]

    env:
      COGNITE_PROJECT: platypus
      COGNITE_CREDENTIALS: ${{secrets.COGNITE_CREDENTIALS}}
      COGNITE_CLIENT_SECRET: ${{secrets.COGNITE_CLIENT_SECRET}}
      COGNITE_CLIENT_ID: ${{secrets.COGNITE_CLIENT_ID}}
      COGNITE_AZURE_TENANT_ID: ${{secrets.COGNITE_AZURE_TENANT_ID}}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('package.json') }}

      - name: Install ðŸ”§
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test --since origin/master
