# generate a new versionfile in the stable package. This file points to openapi v1 and has created a configuration for the documents service.
> yarn codegen:versionfile --package=stable --version=v1 create
< ok

# running the create command again should fail since it already exists
> yarn codegen:versionfile --package=stable --version=v1 create
< ERROR: can not create a versionfile for the "stable" package as it already exists

# update the versionfile
> yarn codegen:versionfile --package=stable --version=v1 update
< ok

# configure a specific service to use it. This should setup the simplest path filter using the service name in the uri
> yarn codegen:configure --package=stable --service=documents create
< ok

# delete a configuration
> yarn codegen:configure --package=stable --service=documents delete
< ok

# specify that a configuration must use it's own versionfile (versionfile-scope is global by default)
> yarn codegen openapi --service=documents --package=stable --version=v1 create
< ok
> yarn codegen:configure --package=stable --service=documents --versionfile-scope=local update
< ok

# Alternatively, the global config file is copied if no versionfile exists to ensure there are no unexpected state. If you want a fresh versionfile, you must create as shown above.
> yarn codegen:configure --package=stable --service=documents --versionfile-scope=local update
< ok

# You can also specify that the versionfile can be found locally and should be copied
> yarn codegen:versionfile --service=documents --package=stable --from-path=/tmp/v1.json create

# run type generation for a package. This will load config files from the configured services and generate types.
# types are generated for one package at the time. 
> yarn codegen --package=stable generate
< ok

# run type generation for a package. Here some services failed for unknown reasons.
# some types will still be updated,
> yarn codegen --package=stable generate
< WARNING: service "documents" have a invalid configuration and was not updated
< WARNING: service "files" have a invalid configuration and was not updated
> ERROR: could not generate types for some packages, reset the versionfile and configure the faulty services to use a local versionfile

