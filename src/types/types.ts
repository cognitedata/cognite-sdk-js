// Copyright 2019 Cognite AS
/**
 * Cognite API
 * This is the reference documentation for the Cognite API. Here you can see an overview of all methods available through the API.
 *
 * The version of the OpenAPI document: v1 beta
 * Contact: support@cognite.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 *
 * @export
 * @enum {string}
 */
export type Aggregate =
  | 'average'
  | 'max'
  | 'min'
  | 'count'
  | 'sum'
  | 'interpolation'
  | 'stepInterpolation'
  | 'totalVariation'
  | 'continuousVariance'
  | 'discreteVariance';

export const Aggregate = {
  Average: 'average' as Aggregate,
  Max: 'max' as Aggregate,
  Min: 'min' as Aggregate,
  Count: 'count' as Aggregate,
  Sum: 'sum' as Aggregate,
  Interpolation: 'interpolation' as Aggregate,
  StepInterpolation: 'stepInterpolation' as Aggregate,
  TotalVariation: 'totalVariation' as Aggregate,
  ContinuousVariance: 'continuousVariance' as Aggregate,
  DiscreteVariance: 'discreteVariance' as Aggregate,
};

/**
 *
 * @export
 * @interface AnalyticsAcl
 */
export interface AnalyticsAcl {
  /**
   *
   * @type {CogniteanalyticsAclAcl}
   * @memberof AnalyticsAcl
   */
  analyticsAcl?: CogniteanalyticsAclAcl;
}
/**
 *
 * @export
 * @interface ApiKeyObject
 */
export interface ApiKeyObject {
  /**
   * id of the api key
   * @type {number}
   * @memberof ApiKeyObject
   */
  id: number;
  /**
   * id of the service account
   * @type {number}
   * @memberof ApiKeyObject
   */
  serviceAccountId: number;
  /**
   * Created time in unix milliseconds
   * @type {Date}
   * @memberof ApiKeyObject
   */
  createdTime: Date;
  /**
   *
   * @type {string}
   * @memberof ApiKeyObject
   */
  status: ApiKeyObjectStatusEnum;
}

/**
 *
 * @export
 * @enum {string}
 */
export type ApiKeyObjectStatusEnum = 'ACTIVE' | 'DELETED';

export const ApiKeyObjectStatusEnum = {
  ACTIVE: 'ACTIVE' as ApiKeyObjectStatusEnum,
  DELETED: 'DELETED' as ApiKeyObjectStatusEnum,
};

/**
 *
 * @export
 * @interface ApiKeyRequest
 */
export interface ApiKeyRequest {
  /**
   *
   * @type {number}
   * @memberof ApiKeyRequest
   */
  serviceAccountId: number;
}
/**
 *
 * @export
 * @interface ApiKeyResponse
 */
export interface ApiKeyResponse {
  /**
   *
   * @type {Array<ApiKeyObject>}
   * @memberof ApiKeyResponse
   */
  items: ApiKeyObject[];
}
/**
 *
 * @export
 * @interface ApikeysAcl
 */
export interface ApikeysAcl {
  /**
   *
   * @type {CogniteapikeysAclAcl}
   * @memberof ApikeysAcl
   */
  apikeysAcl?: CogniteapikeysAclAcl;
}
/**
 * @type ArrayPatchLong
 * Change that will be applied to array object.
 * @export
 */
export type ArrayPatchLong = ArrayPatchLongAddOrRemove | ArrayPatchLongSet;

/**
 *
 * @export
 * @interface ArrayPatchLongAddOrRemove
 */
export interface ArrayPatchLongAddOrRemove {
  /**
   *
   * @type {Array<number>}
   * @memberof ArrayPatchLongAddOrRemove
   */
  add?: number[];
  /**
   *
   * @type {Array<number>}
   * @memberof ArrayPatchLongAddOrRemove
   */
  remove?: number[];
}
/**
 *
 * @export
 * @interface ArrayPatchLongSet
 */
export interface ArrayPatchLongSet {
  /**
   *
   * @type {Array<number>}
   * @memberof ArrayPatchLongSet
   */
  set: number[];
}
/**
 *
 * @export
 * @interface Asset
 */
export interface Asset {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof Asset
   */
  externalId?: string;
  /**
   * Name of asset. Often referred to as tag.
   * @type {string}
   * @memberof Asset
   */
  name: string;
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof Asset
   */
  parentId?: number;
  /**
   * Description of asset.
   * @type {string}
   * @memberof Asset
   */
  description?: string;
  /**
   * Custom, application specific metadata. String key -> String value
   * @type {{ [key: string]: string; }}
   * @memberof Asset
   */
  metadata?: { [key: string]: string };
  /**
   * The source of this asset
   * @type {string}
   * @memberof Asset
   */
  source?: string;
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof Asset
   */
  id: number;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof Asset
   */
  createdTime: Date;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof Asset
   */
  lastUpdatedTime: Date;
  /**
   * IDs of assets on the path to the asset.
   * @type {Array<number>}
   * @memberof Asset
   */
  path: number[];
  /**
   * Asset path depth (number of levels below root node).
   * @type {number}
   * @memberof Asset
   */
  depth: number;
}
/**
 * @type AssetChange
 * @export
 */
export type AssetChange = AssetChangeByExternalId | AssetChangeById;

/**
 *
 * @export
 * @interface AssetChangeByExternalId
 */
export interface AssetChangeByExternalId {
  /**
   *
   * @type {AssetPatchUpdate}
   * @memberof AssetChangeByExternalId
   */
  update: AssetPatchUpdate;
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof AssetChangeByExternalId
   */
  externalId: string;
}
/**
 *
 * @export
 * @interface AssetChangeByExternalIdMember
 */
export interface AssetChangeByExternalIdMember {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof AssetChangeByExternalIdMember
   */
  externalId: string;
}
/**
 *
 * @export
 * @interface AssetChangeById
 */
export interface AssetChangeById {
  /**
   *
   * @type {AssetPatchUpdate}
   * @memberof AssetChangeById
   */
  update: AssetPatchUpdate;
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof AssetChangeById
   */
  id: number;
}
/**
 *
 * @export
 * @interface AssetChangeByIdMember
 */
export interface AssetChangeByIdMember {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof AssetChangeByIdMember
   */
  id: number;
}
/**
 *
 * @export
 * @interface AssetExternalId
 */
export interface AssetExternalId {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof AssetExternalId
   */
  externalId: string;
}
/**
 * Filter on assets with exact match
 * @export
 * @interface AssetFilter
 */
export interface AssetFilter {
  /**
   *
   * @type {AssetFilterFilter}
   * @memberof AssetFilter
   */
  filter?: AssetFilterFilter;
  /**
   * <- Limits the maximum number of results to be returned by single request. In case there are more results to the request \'nextCursor\' attribute will be provided as part of response. Request may contain less results than request limit.
   * @type {number}
   * @memberof AssetFilter
   */
  limit?: number;
}
/**
 *
 * @export
 * @interface AssetFilterFilter
 */
export interface AssetFilterFilter {
  /**
   * Name of asset. Often referred to as tag.
   * @type {string}
   * @memberof AssetFilterFilter
   */
  name?: string;
  /**
   *
   * @type {Array<number>}
   * @memberof AssetFilterFilter
   */
  parentIds?: number[];
  /**
   * Custom, application specific metadata. String key -> String value
   * @type {{ [key: string]: string; }}
   * @memberof AssetFilterFilter
   */
  metadata?: { [key: string]: string };
  /**
   * The source of this asset
   * @type {string}
   * @memberof AssetFilterFilter
   */
  source?: string;
  /**
   *
   * @type {EpochTimestampRange}
   * @memberof AssetFilterFilter
   */
  createdTime?: EpochTimestampRange;
  /**
   *
   * @type {EpochTimestampRange}
   * @memberof AssetFilterFilter
   */
  lastUpdatedTime?: EpochTimestampRange;
  /**
   * filtered assets are root assets or not
   * @type {boolean}
   * @memberof AssetFilterFilter
   */
  root?: boolean;
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof AssetFilterFilter
   */
  externalIdPrefix?: string;
}
/**
 * @type AssetIdEither
 * @export
 */
export type AssetIdEither = AssetExternalId | AssetInternalId;

/**
 *
 * @export
 * @interface AssetInternalId
 */
export interface AssetInternalId {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof AssetInternalId
   */
  id: number;
}
/**
 *
 * @export
 * @interface AssetListScope
 */
export interface AssetListScope {
  /**
   *
   * @type {AssetFilterFilter}
   * @memberof AssetListScope
   */
  filter?: AssetFilterFilter;
  /**
   * <- Limits the maximum number of results to be returned by single request. In case there are more results to the request \'nextCursor\' attribute will be provided as part of response. Request may contain less results than request limit.
   * @type {number}
   * @memberof AssetListScope
   */
  limit?: number;
  /**
   *
   * @type {string}
   * @memberof AssetListScope
   */
  cursor?: string;
}
/**
 *
 * @export
 * @interface AssetMapping3D
 */
export interface AssetMapping3D {
  /**
   * The ID of the node.
   * @type {number}
   * @memberof AssetMapping3D
   */
  nodeId: number;
  /**
   * The ID of the associated asset (Cognite\'s Assets API).
   * @type {number}
   * @memberof AssetMapping3D
   */
  assetId: number;
  /**
   * A number describing the position of this node in the 3D hierarchy, starting from 0. The tree is traversed in a depth-first order.
   * @type {number}
   * @memberof AssetMapping3D
   */
  treeIndex: number;
  /**
   * The number of nodes in the subtree of this node (this number included the node itself).
   * @type {number}
   * @memberof AssetMapping3D
   */
  subtreeSize: number;
}
/**
 *
 * @export
 * @interface AssetMapping3DList
 */
export interface AssetMapping3DList {
  /**
   *
   * @type {Array<AssetMapping3D>}
   * @memberof AssetMapping3DList
   */
  items: AssetMapping3D[];
}
/**
 *
 * @export
 * @interface AssetMember
 */
export interface AssetMember {
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof AssetMember
   */
  createdTime: Date;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof AssetMember
   */
  lastUpdatedTime: Date;
  /**
   * IDs of assets on the path to the asset.
   * @type {Array<number>}
   * @memberof AssetMember
   */
  path: number[];
  /**
   * Asset path depth (number of levels below root node).
   * @type {number}
   * @memberof AssetMember
   */
  depth: number;
}
/**
 * Changes applied to asset
 * @export
 * @interface AssetPatch
 */
export interface AssetPatch {
  /**
   *
   * @type {AssetPatchUpdate}
   * @memberof AssetPatch
   */
  update: AssetPatchUpdate;
}
/**
 *
 * @export
 * @interface AssetPatchUpdate
 */
export interface AssetPatchUpdate {
  /**
   *
   * @type {SinglePatchString}
   * @memberof AssetPatchUpdate
   */
  externalId?: SinglePatchString;
  /**
   *
   * @type {SinglePatchRequiredString}
   * @memberof AssetPatchUpdate
   */
  name?: SinglePatchRequiredString;
  /**
   *
   * @type {SinglePatchString}
   * @memberof AssetPatchUpdate
   */
  description?: SinglePatchString;
  /**
   *
   * @type {ObjectPatch}
   * @memberof AssetPatchUpdate
   */
  metadata?: ObjectPatch;
  /**
   *
   * @type {SinglePatchString}
   * @memberof AssetPatchUpdate
   */
  source?: SinglePatchString;
}
/**
 *
 * @export
 * @interface AssetSearch
 */
export interface AssetSearch {
  /**
   *
   * @type {AssetSearchSearch}
   * @memberof AssetSearch
   */
  search?: AssetSearchSearch;
}
/**
 * Search request with filter capabilities
 * @export
 * @interface AssetSearchFilter
 */
export interface AssetSearchFilter {
  /**
   *
   * @type {AssetFilterFilter}
   * @memberof AssetSearchFilter
   */
  filter?: AssetFilterFilter;
  /**
   * <- Limits the maximum number of results to be returned by single request. In case there are more results to the request \'nextCursor\' attribute will be provided as part of response. Request may contain less results than request limit.
   * @type {number}
   * @memberof AssetSearchFilter
   */
  limit?: number;
  /**
   *
   * @type {AssetSearchSearch}
   * @memberof AssetSearchFilter
   */
  search?: AssetSearchSearch;
}
/**
 *
 * @export
 * @interface AssetSearchSearch
 */
export interface AssetSearchSearch {
  /**
   * Name of asset. Often referred to as tag.
   * @type {string}
   * @memberof AssetSearchSearch
   */
  name?: string;
  /**
   * Description of asset.
   * @type {string}
   * @memberof AssetSearchSearch
   */
  description?: string;
}
/**
 *
 * @export
 * @interface AssetsAcl
 */
export interface AssetsAcl {
  /**
   *
   * @type {CogniteassetsAclAcl}
   * @memberof AssetsAcl
   */
  assetsAcl?: CogniteassetsAclAcl;
}
/**
 * Data specific to Azure AD authentication
 * @export
 * @interface AzureADConfigurationDTO
 */
export interface AzureADConfigurationDTO {
  /**
   * Azure application ID. You get this when creating the Azure app.
   * @type {string}
   * @memberof AzureADConfigurationDTO
   */
  appId?: string;
  /**
   * Azure application secret. You get this when creating the Azure app.
   * @type {string}
   * @memberof AzureADConfigurationDTO
   */
  appSecret?: string;
  /**
   * Azure tenant ID.
   * @type {string}
   * @memberof AzureADConfigurationDTO
   */
  tenantId?: string;
  /**
   * Resource to grant access to. This is usually (always?) 00000002-0000-0000-c000-000000000000
   * @type {string}
   * @memberof AzureADConfigurationDTO
   */
  appResourceId?: string;
}
/**
 * The bounding box of the subtree with this sector as the root sector. Is null if there are no geometries in the subtree.
 * @export
 * @interface BoundingBox3D
 */
export interface BoundingBox3D {
  /**
   *
   * @type {Array<number>}
   * @memberof BoundingBox3D
   */
  max: number[];
  /**
   *
   * @type {Array<number>}
   * @memberof BoundingBox3D
   */
  min: number[];
}
/**
 * @type CogniteCapabilityItem
 * @export
 */
export type CogniteCapabilityItem =
  | AnalyticsAcl
  | ApikeysAcl
  | AssetsAcl
  | EventsAcl
  | FilesAcl
  | GroupsAcl
  | ProjectsAcl
  | RawAcl
  | SecurityCategoriesAcl
  | SequencesAcl
  | ThreedAcl
  | TimeSeriesAcl
  | UsersAcl;

/**
 *
 * @export
 * @interface CogniteanalyticsAclAcl
 */
export interface CogniteanalyticsAclAcl {
  /**
   *
   * @type {Array<CogniteanalyticsAclAction>}
   * @memberof CogniteanalyticsAclAcl
   */
  actions: CogniteanalyticsAclAction[];
  /**
   *
   * @type {CogniteanalyticsAclScope}
   * @memberof CogniteanalyticsAclAcl
   */
  scope: CogniteanalyticsAclScope;
}
/**
 *
 * @export
 * @enum {string}
 */
export type CogniteanalyticsAclAction = 'READ' | 'EXECUTE' | 'LIST';

export const CogniteanalyticsAclAction = {
  READ: 'READ' as CogniteanalyticsAclAction,
  EXECUTE: 'EXECUTE' as CogniteanalyticsAclAction,
  LIST: 'LIST' as CogniteanalyticsAclAction,
};

/**
 *
 * @export
 * @interface CogniteanalyticsAclScope
 */
export interface CogniteanalyticsAclScope {
  /**
   *
   * @type {object}
   * @memberof CogniteanalyticsAclScope
   */
  all?: object;
}
/**
 *
 * @export
 * @interface CogniteapikeysAclAcl
 */
export interface CogniteapikeysAclAcl {
  /**
   *
   * @type {Array<CogniteapikeysAclAction>}
   * @memberof CogniteapikeysAclAcl
   */
  actions: CogniteapikeysAclAction[];
  /**
   *
   * @type {CogniteapikeysAclScope}
   * @memberof CogniteapikeysAclAcl
   */
  scope: CogniteapikeysAclScope;
}
/**
 *
 * @export
 * @enum {string}
 */
export type CogniteapikeysAclAction = 'LIST' | 'CREATE' | 'DELETE';

export const CogniteapikeysAclAction = {
  LIST: 'LIST' as CogniteapikeysAclAction,
  CREATE: 'CREATE' as CogniteapikeysAclAction,
  DELETE: 'DELETE' as CogniteapikeysAclAction,
};

/**
 * @type CogniteapikeysAclScope
 * @export
 */
export type CogniteapikeysAclScope =
  | CogniteapikeysAclScopeMember
  | CogniteapikeysAclScopeMember1;

/**
 *
 * @export
 * @interface CogniteapikeysAclScopeMember
 */
export interface CogniteapikeysAclScopeMember {
  /**
   *
   * @type {object}
   * @memberof CogniteapikeysAclScopeMember
   */
  all?: object;
}
/**
 *
 * @export
 * @interface CogniteapikeysAclScopeMember1
 */
export interface CogniteapikeysAclScopeMember1 {
  /**
   *
   * @type {object}
   * @memberof CogniteapikeysAclScopeMember1
   */
  currentuserscope?: object;
}
/**
 *
 * @export
 * @interface CogniteassetsAclAcl
 */
export interface CogniteassetsAclAcl {
  /**
   *
   * @type {Array<CogniteassetsAclAction>}
   * @memberof CogniteassetsAclAcl
   */
  actions: CogniteassetsAclAction[];
  /**
   *
   * @type {CogniteassetsAclScope}
   * @memberof CogniteassetsAclAcl
   */
  scope: CogniteassetsAclScope;
}
/**
 *
 * @export
 * @enum {string}
 */
export type CogniteassetsAclAction = 'READ' | 'WRITE';

export const CogniteassetsAclAction = {
  READ: 'READ' as CogniteassetsAclAction,
  WRITE: 'WRITE' as CogniteassetsAclAction,
};

/**
 *
 * @export
 * @interface CogniteassetsAclIdScope
 */
export interface CogniteassetsAclIdScope {
  /**
   *
   * @type {Array<string>}
   * @memberof CogniteassetsAclIdScope
   */
  subtreeIds?: string[];
}
/**
 *
 * @export
 * @interface CogniteassetsAclScope
 */
export interface CogniteassetsAclScope {
  /**
   *
   * @type {object}
   * @memberof CogniteassetsAclScope
   */
  all?: object;
}
/**
 *
 * @export
 * @interface CogniteeventsAclAcl
 */
export interface CogniteeventsAclAcl {
  /**
   *
   * @type {Array<CogniteeventsAclAction>}
   * @memberof CogniteeventsAclAcl
   */
  actions: CogniteeventsAclAction[];
  /**
   *
   * @type {CogniteeventsAclScope}
   * @memberof CogniteeventsAclAcl
   */
  scope: CogniteeventsAclScope;
}
/**
 *
 * @export
 * @enum {string}
 */
export type CogniteeventsAclAction = 'READ' | 'WRITE';

export const CogniteeventsAclAction = {
  READ: 'READ' as CogniteeventsAclAction,
  WRITE: 'WRITE' as CogniteeventsAclAction,
};

/**
 *
 * @export
 * @interface CogniteeventsAclScope
 */
export interface CogniteeventsAclScope {
  /**
   *
   * @type {object}
   * @memberof CogniteeventsAclScope
   */
  all?: object;
}
/**
 *
 * @export
 * @interface CognitefilesAclAcl
 */
export interface CognitefilesAclAcl {
  /**
   *
   * @type {Array<CognitefilesAclAction>}
   * @memberof CognitefilesAclAcl
   */
  actions: CognitefilesAclAction[];
  /**
   *
   * @type {CognitefilesAclScope}
   * @memberof CognitefilesAclAcl
   */
  scope: CognitefilesAclScope;
}
/**
 *
 * @export
 * @enum {string}
 */
export type CognitefilesAclAction = 'READ' | 'WRITE';

export const CognitefilesAclAction = {
  READ: 'READ' as CognitefilesAclAction,
  WRITE: 'WRITE' as CognitefilesAclAction,
};

/**
 *
 * @export
 * @interface CognitefilesAclScope
 */
export interface CognitefilesAclScope {
  /**
   *
   * @type {object}
   * @memberof CognitefilesAclScope
   */
  all?: object;
}
/**
 *
 * @export
 * @interface CognitegroupsAclAcl
 */
export interface CognitegroupsAclAcl {
  /**
   *
   * @type {Array<CognitegroupsAclAction>}
   * @memberof CognitegroupsAclAcl
   */
  actions: CognitegroupsAclAction[];
  /**
   *
   * @type {CognitegroupsAclScope}
   * @memberof CognitegroupsAclAcl
   */
  scope: CognitegroupsAclScope;
}
/**
 *
 * @export
 * @enum {string}
 */
export type CognitegroupsAclAction =
  | 'LIST'
  | 'READ'
  | 'CREATE'
  | 'UPDATE'
  | 'DELETE';

export const CognitegroupsAclAction = {
  LIST: 'LIST' as CognitegroupsAclAction,
  READ: 'READ' as CognitegroupsAclAction,
  CREATE: 'CREATE' as CognitegroupsAclAction,
  UPDATE: 'UPDATE' as CognitegroupsAclAction,
  DELETE: 'DELETE' as CognitegroupsAclAction,
};

/**
 * @type CognitegroupsAclScope
 * @export
 */
export type CognitegroupsAclScope =
  | CognitegroupsAclScopeMember
  | CognitegroupsAclScopeMember1;

/**
 *
 * @export
 * @interface CognitegroupsAclScopeMember
 */
export interface CognitegroupsAclScopeMember {
  /**
   *
   * @type {object}
   * @memberof CognitegroupsAclScopeMember
   */
  all?: object;
}
/**
 *
 * @export
 * @interface CognitegroupsAclScopeMember1
 */
export interface CognitegroupsAclScopeMember1 {
  /**
   *
   * @type {object}
   * @memberof CognitegroupsAclScopeMember1
   */
  currentuserscope?: object;
}
/**
 *
 * @export
 * @interface CogniteprojectsAclAcl
 */
export interface CogniteprojectsAclAcl {
  /**
   *
   * @type {Array<CogniteprojectsAclAction>}
   * @memberof CogniteprojectsAclAcl
   */
  actions: CogniteprojectsAclAction[];
  /**
   *
   * @type {CogniteprojectsAclScope}
   * @memberof CogniteprojectsAclAcl
   */
  scope: CogniteprojectsAclScope;
}
/**
 *
 * @export
 * @enum {string}
 */
export type CogniteprojectsAclAction = 'LIST' | 'READ' | 'CREATE' | 'UPDATE';

export const CogniteprojectsAclAction = {
  LIST: 'LIST' as CogniteprojectsAclAction,
  READ: 'READ' as CogniteprojectsAclAction,
  CREATE: 'CREATE' as CogniteprojectsAclAction,
  UPDATE: 'UPDATE' as CogniteprojectsAclAction,
};

/**
 *
 * @export
 * @interface CogniteprojectsAclScope
 */
export interface CogniteprojectsAclScope {
  /**
   *
   * @type {object}
   * @memberof CogniteprojectsAclScope
   */
  all?: object;
}
/**
 *
 * @export
 * @interface CogniterawAclAcl
 */
export interface CogniterawAclAcl {
  /**
   *
   * @type {Array<CogniterawAclAction>}
   * @memberof CogniterawAclAcl
   */
  actions: CogniterawAclAction[];
  /**
   *
   * @type {CogniterawAclScope}
   * @memberof CogniterawAclAcl
   */
  scope: CogniterawAclScope;
}
/**
 *
 * @export
 * @enum {string}
 */
export type CogniterawAclAction = 'READ' | 'WRITE' | 'LIST';

export const CogniterawAclAction = {
  READ: 'READ' as CogniterawAclAction,
  WRITE: 'WRITE' as CogniterawAclAction,
  LIST: 'LIST' as CogniterawAclAction,
};

/**
 *
 * @export
 * @interface CogniterawAclScope
 */
export interface CogniterawAclScope {
  /**
   *
   * @type {object}
   * @memberof CogniterawAclScope
   */
  all?: object;
}
/**
 *
 * @export
 * @interface CognitesecuritycategoriesAclAcl
 */
export interface CognitesecuritycategoriesAclAcl {
  /**
   *
   * @type {Array<CognitesecuritycategoriesAclAction>}
   * @memberof CognitesecuritycategoriesAclAcl
   */
  actions: CognitesecuritycategoriesAclAction[];
  /**
   *
   * @type {CognitesecuritycategoriesAclScope}
   * @memberof CognitesecuritycategoriesAclAcl
   */
  scope: CognitesecuritycategoriesAclScope;
}
/**
 *
 * @export
 * @enum {string}
 */
export type CognitesecuritycategoriesAclAction =
  | 'MEMBEROF'
  | 'LIST'
  | 'CREATE'
  | 'DELETE';

export const CognitesecuritycategoriesAclAction = {
  MEMBEROF: 'MEMBEROF' as CognitesecuritycategoriesAclAction,
  LIST: 'LIST' as CognitesecuritycategoriesAclAction,
  CREATE: 'CREATE' as CognitesecuritycategoriesAclAction,
  DELETE: 'DELETE' as CognitesecuritycategoriesAclAction,
};

/**
 *
 * @export
 * @interface CognitesecuritycategoriesAclScope
 */
export interface CognitesecuritycategoriesAclScope {
  /**
   *
   * @type {object}
   * @memberof CognitesecuritycategoriesAclScope
   */
  all?: object;
}
/**
 *
 * @export
 * @interface CognitesequencesAclAcl
 */
export interface CognitesequencesAclAcl {
  /**
   *
   * @type {Array<CognitesequencesAclAction>}
   * @memberof CognitesequencesAclAcl
   */
  actions: CognitesequencesAclAction[];
  /**
   *
   * @type {CognitesequencesAclScope}
   * @memberof CognitesequencesAclAcl
   */
  scope: CognitesequencesAclScope;
}
/**
 *
 * @export
 * @enum {string}
 */
export type CognitesequencesAclAction = 'READ' | 'WRITE';

export const CognitesequencesAclAction = {
  READ: 'READ' as CognitesequencesAclAction,
  WRITE: 'WRITE' as CognitesequencesAclAction,
};

/**
 *
 * @export
 * @interface CognitesequencesAclScope
 */
export interface CognitesequencesAclScope {
  /**
   *
   * @type {object}
   * @memberof CognitesequencesAclScope
   */
  all?: object;
}
/**
 *
 * @export
 * @interface CognitethreedAclAcl
 */
export interface CognitethreedAclAcl {
  /**
   *
   * @type {Array<CognitethreedAclAction>}
   * @memberof CognitethreedAclAcl
   */
  actions: CognitethreedAclAction[];
  /**
   *
   * @type {CognitethreedAclScope}
   * @memberof CognitethreedAclAcl
   */
  scope: CognitethreedAclScope;
}
/**
 *
 * @export
 * @enum {string}
 */
export type CognitethreedAclAction = 'READ' | 'CREATE' | 'UPDATE' | 'DELETE';

export const CognitethreedAclAction = {
  READ: 'READ' as CognitethreedAclAction,
  CREATE: 'CREATE' as CognitethreedAclAction,
  UPDATE: 'UPDATE' as CognitethreedAclAction,
  DELETE: 'DELETE' as CognitethreedAclAction,
};

/**
 *
 * @export
 * @interface CognitethreedAclScope
 */
export interface CognitethreedAclScope {
  /**
   *
   * @type {object}
   * @memberof CognitethreedAclScope
   */
  all?: object;
}
/**
 *
 * @export
 * @interface CognitetimeseriesAclAcl
 */
export interface CognitetimeseriesAclAcl {
  /**
   *
   * @type {Array<CognitetimeseriesAclAction>}
   * @memberof CognitetimeseriesAclAcl
   */
  actions: CognitetimeseriesAclAction[];
  /**
   *
   * @type {CognitetimeseriesAclScope}
   * @memberof CognitetimeseriesAclAcl
   */
  scope: CognitetimeseriesAclScope;
}
/**
 *
 * @export
 * @enum {string}
 */
export type CognitetimeseriesAclAction = 'READ' | 'WRITE';

export const CognitetimeseriesAclAction = {
  READ: 'READ' as CognitetimeseriesAclAction,
  WRITE: 'WRITE' as CognitetimeseriesAclAction,
};

/**
 * @type CognitetimeseriesAclScope
 * @export
 */
export type CognitetimeseriesAclScope =
  | CognitetimeseriesAclScopeMember
  | CognitetimeseriesAclScopeMember1;

/**
 *
 * @export
 * @interface CognitetimeseriesAclScopeMember
 */
export interface CognitetimeseriesAclScopeMember {
  /**
   *
   * @type {object}
   * @memberof CognitetimeseriesAclScopeMember
   */
  all?: object;
}
/**
 *
 * @export
 * @interface CognitetimeseriesAclScopeMember1
 */
export interface CognitetimeseriesAclScopeMember1 {
  /**
   *
   * @type {CogniteassetsAclIdScope}
   * @memberof CognitetimeseriesAclScopeMember1
   */
  assetIdScope?: CogniteassetsAclIdScope;
}
/**
 *
 * @export
 * @interface CogniteusersAclAcl
 */
export interface CogniteusersAclAcl {
  /**
   *
   * @type {Array<CogniteusersAclAction>}
   * @memberof CogniteusersAclAcl
   */
  actions: CogniteusersAclAction[];
  /**
   *
   * @type {CogniteusersAclScope}
   * @memberof CogniteusersAclAcl
   */
  scope: CogniteusersAclScope;
}
/**
 *
 * @export
 * @enum {string}
 */
export type CogniteusersAclAction = 'LIST' | 'CREATE' | 'DELETE';

export const CogniteusersAclAction = {
  LIST: 'LIST' as CogniteusersAclAction,
  CREATE: 'CREATE' as CogniteusersAclAction,
  DELETE: 'DELETE' as CogniteusersAclAction,
};

/**
 * @type CogniteusersAclScope
 * @export
 */
export type CogniteusersAclScope =
  | CogniteusersAclScopeMember
  | CogniteusersAclScopeMember1;

/**
 *
 * @export
 * @interface CogniteusersAclScopeMember
 */
export interface CogniteusersAclScopeMember {
  /**
   *
   * @type {object}
   * @memberof CogniteusersAclScopeMember
   */
  all?: object;
}
/**
 *
 * @export
 * @interface CogniteusersAclScopeMember1
 */
export interface CogniteusersAclScopeMember1 {
  /**
   *
   * @type {object}
   * @memberof CogniteusersAclScopeMember1
   */
  currentuserscope?: object;
}
/**
 *
 * @export
 * @interface CreateAssetMapping3D
 */
export interface CreateAssetMapping3D {
  /**
   * The ID of the node.
   * @type {number}
   * @memberof CreateAssetMapping3D
   */
  nodeId: number;
  /**
   * The ID of the associated asset (Cognite\'s Assets API).
   * @type {number}
   * @memberof CreateAssetMapping3D
   */
  assetId: number;
}
/**
 *
 * @export
 * @interface CreateModel3D
 */
export interface CreateModel3D {
  /**
   * The name of the model.
   * @type {string}
   * @memberof CreateModel3D
   */
  name: string;
}
/**
 *
 * @export
 * @interface CreateRevision3D
 */
export interface CreateRevision3D {
  /**
   * True if the revision is marked as published.
   * @type {boolean}
   * @memberof CreateRevision3D
   */
  published?: boolean;
  /**
   *
   * @type {Array<number>}
   * @memberof CreateRevision3D
   */
  rotation?: number[];
  /**
   * Custom, application specific metadata. String key -> String value
   * @type {{ [key: string]: string; }}
   * @memberof CreateRevision3D
   */
  metadata?: { [key: string]: string };
  /**
   *
   * @type {RevisionCameraProperties}
   * @memberof CreateRevision3D
   */
  camera?: RevisionCameraProperties;
  /**
   * The file id to a file uploaded to Cognite\'s Files API. Can only be set on revision creation, and can never be updated. _Only FBX files are supported_.
   * @type {number}
   * @memberof CreateRevision3D
   */
  fileId: number;
}
/**
 * Cursor for paging through results
 * @export
 * @interface Cursor
 */
export interface Cursor {
  /**
   *
   * @type {string}
   * @memberof Cursor
   */
  cursor?: string;
}
/**
 *
 * @export
 * @interface DataApiKeyRequest
 */
export interface DataApiKeyRequest {
  /**
   *
   * @type {Array<ApiKeyRequest>}
   * @memberof DataApiKeyRequest
   */
  items: ApiKeyRequest[];
}
/**
 *
 * @export
 * @interface DataAsset
 */
export interface DataAsset {
  /**
   *
   * @type {Array<Asset>}
   * @memberof DataAsset
   */
  items: Asset[];
}
/**
 *
 * @export
 * @interface DataAssetChange
 */
export interface DataAssetChange {
  /**
   *
   * @type {Array<AssetChange>}
   * @memberof DataAssetChange
   */
  items: AssetChange[];
}
/**
 *
 * @export
 * @interface DataEvent
 */
export interface DataEvent {
  /**
   *
   * @type {Array<Event>}
   * @memberof DataEvent
   */
  items: Event[];
}
/**
 *
 * @export
 * @interface DataEventChange
 */
export interface DataEventChange {
  /**
   *
   * @type {Array<EventChange>}
   * @memberof DataEventChange
   */
  items: EventChange[];
}
/**
 *
 * @export
 * @interface DataExternalAsset
 */
export interface DataExternalAsset {
  /**
   *
   * @type {Array<DataExternalAssetItem>}
   * @memberof DataExternalAsset
   */
  items: DataExternalAssetItem[];
}
/**
 *
 * @export
 * @interface DataExternalAssetItem
 */
export interface DataExternalAssetItem {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof DataExternalAssetItem
   */
  externalId?: string;
  /**
   * Name of asset. Often referred to as tag.
   * @type {string}
   * @memberof DataExternalAssetItem
   */
  name: string;
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof DataExternalAssetItem
   */
  parentId?: number;
  /**
   * Description of asset.
   * @type {string}
   * @memberof DataExternalAssetItem
   */
  description?: string;
  /**
   * Custom, application specific metadata. String key -> String value
   * @type {{ [key: string]: string; }}
   * @memberof DataExternalAssetItem
   */
  metadata?: { [key: string]: string };
  /**
   * The source of this asset
   * @type {string}
   * @memberof DataExternalAssetItem
   */
  source?: string;
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof DataExternalAssetItem
   */
  parentExternalId?: string;
}
/**
 *
 * @export
 * @interface DataExternalAssetItemMember
 */
export interface DataExternalAssetItemMember {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof DataExternalAssetItemMember
   */
  parentExternalId?: string;
}
/**
 *
 * @export
 * @interface DataExternalEvent
 */
export interface DataExternalEvent {
  /**
   *
   * @type {Array<ExternalEvent>}
   * @memberof DataExternalEvent
   */
  items: ExternalEvent[];
}
/**
 *
 * @export
 * @interface DataExternalFileMetadata
 */
export interface DataExternalFileMetadata {
  /**
   *
   * @type {Array<ExternalFilesMetadata>}
   * @memberof DataExternalFileMetadata
   */
  items?: ExternalFilesMetadata[];
}
/**
 *
 * @export
 * @interface DataFileChange
 */
export interface DataFileChange {
  /**
   *
   * @type {Array<FileChangeUpdate>}
   * @memberof DataFileChange
   */
  items: FileChangeUpdate[];
}
/**
 *
 * @export
 * @interface DataFileMetadata
 */
export interface DataFileMetadata {
  /**
   *
   * @type {Array<FilesMetadata>}
   * @memberof DataFileMetadata
   */
  items?: FilesMetadata[];
}
/**
 * List of responses. Order matches the requests order.
 * @export
 * @interface DataGetTimeSeriesMetadataDTO
 */
export interface DataGetTimeSeriesMetadataDTO {
  /**
   *
   * @type {Array<GetTimeSeriesMetadataDTO>}
   * @memberof DataGetTimeSeriesMetadataDTO
   */
  items: GetTimeSeriesMetadataDTO[];
}
/**
 *
 * @export
 * @interface DataGroup
 */
export interface DataGroup {
  /**
   *
   * @type {Array<Group>}
   * @memberof DataGroup
   */
  items: Group[];
}
/**
 *
 * @export
 * @interface DataGroupSpec
 */
export interface DataGroupSpec {
  /**
   *
   * @type {Array<GroupSpec>}
   * @memberof DataGroupSpec
   */
  items: GroupSpec[];
}
/**
 *
 * @export
 * @interface DataIdentifier
 */
export interface DataIdentifier {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof DataIdentifier
   */
  id: number;
}
/**
 *
 * @export
 * @interface DataIdentifiers
 */
export interface DataIdentifiers {
  /**
   * List of ID objects
   * @type {Array<DataIdentifier>}
   * @memberof DataIdentifiers
   */
  items: DataIdentifier[];
}
/**
 *
 * @export
 * @interface DataIds
 */
export interface DataIds {
  /**
   *
   * @type {Array<AssetIdEither>}
   * @memberof DataIds
   */
  items: AssetIdEither[];
}
/**
 *
 * @export
 * @interface DataLong
 */
export interface DataLong {
  /**
   *
   * @type {Array<number>}
   * @memberof DataLong
   */
  items: number[];
}
/**
 *
 * @export
 * @interface DataRawDB
 */
export interface DataRawDB {
  /**
   *
   * @type {Array<RawDB>}
   * @memberof DataRawDB
   */
  items?: RawDB[];
}
/**
 *
 * @export
 * @interface DataRawDBRow
 */
export interface DataRawDBRow {
  /**
   *
   * @type {Array<RawDBRowInsert>}
   * @memberof DataRawDBRow
   */
  items?: RawDBRowInsert[];
}
/**
 *
 * @export
 * @interface DataRawDBRowKey
 */
export interface DataRawDBRowKey {
  /**
   *
   * @type {Array<RawDBRowKey>}
   * @memberof DataRawDBRowKey
   */
  items?: RawDBRowKey[];
}
/**
 *
 * @export
 * @interface DataRawDBTable
 */
export interface DataRawDBTable {
  /**
   *
   * @type {Array<RawDBTable>}
   * @memberof DataRawDBTable
   */
  items?: RawDBTable[];
}
/**
 *
 * @export
 * @interface DataSecurityCategorySpecDTO
 */
export interface DataSecurityCategorySpecDTO {
  /**
   *
   * @type {Array<SecurityCategorySpecDTO>}
   * @memberof DataSecurityCategorySpecDTO
   */
  items: SecurityCategorySpecDTO[];
}
/**
 * A list of objects along with possible cursors to get the next page of results
 * @export
 * @interface DataWithCursor
 */
export interface DataWithCursor {
  /**
   *
   * @type {Array<FilesMetadata>}
   * @memberof DataWithCursor
   */
  items?: FilesMetadata[];
  /**
   * Cursor to get the next page of results (if available).
   * @type {string}
   * @memberof DataWithCursor
   */
  nextCursor?: string;
}
/**
 * A list of objects along with possible cursors to get the next, or previous, page of results
 * @export
 * @interface DataWithCursorAsset
 */
export interface DataWithCursorAsset {
  /**
   *
   * @type {Array<Asset>}
   * @memberof DataWithCursorAsset
   */
  items: Asset[];
  /**
   * Cursor to get the next page of results (if available).
   * @type {string}
   * @memberof DataWithCursorAsset
   */
  nextCursor?: string;
}
/**
 * A list of objects along with possible cursors to get the next, or previous, page of results
 * @export
 * @interface DataWithCursorEvent
 */
export interface DataWithCursorEvent {
  /**
   *
   * @type {Array<Event>}
   * @memberof DataWithCursorEvent
   */
  items: Event[];
  /**
   * Cursor to get the next page of results (if available).
   * @type {string}
   * @memberof DataWithCursorEvent
   */
  nextCursor?: string;
}
/**
 * A list of objects along with possible cursors to get the next page of result
 * @export
 * @interface DataWithCursorGetTimeSeriesMetadataDTO
 */
export interface DataWithCursorGetTimeSeriesMetadataDTO {
  /**
   *
   * @type {Array<GetTimeSeriesMetadataDTO>}
   * @memberof DataWithCursorGetTimeSeriesMetadataDTO
   */
  items: GetTimeSeriesMetadataDTO[];
  /**
   * Cursor to get the next page of results (if available).
   * @type {string}
   * @memberof DataWithCursorGetTimeSeriesMetadataDTO
   */
  nextCursor?: string;
}
/**
 * A list of objects along with possible cursors to get the next, or previous, page of results
 * @export
 * @interface DataWithCursorRawDB
 */
export interface DataWithCursorRawDB {
  /**
   *
   * @type {Array<RawDB>}
   * @memberof DataWithCursorRawDB
   */
  items?: RawDB[];
  /**
   * Cursor to get the next page of results (if available).
   * @type {string}
   * @memberof DataWithCursorRawDB
   */
  nextCursor?: string;
}
/**
 * A list of objects along with possible cursors to get the next, or previous, page of results
 * @export
 * @interface DataWithCursorRawDBRow
 */
export interface DataWithCursorRawDBRow {
  /**
   *
   * @type {Array<RawDBRow>}
   * @memberof DataWithCursorRawDBRow
   */
  items?: RawDBRow[];
  /**
   * Cursor to get the next page of results (if available).
   * @type {string}
   * @memberof DataWithCursorRawDBRow
   */
  nextCursor?: string;
}
/**
 * A list of objects along with possible cursors to get the next, or previous, page of results
 * @export
 * @interface DataWithCursorRawDBTable
 */
export interface DataWithCursorRawDBTable {
  /**
   *
   * @type {Array<RawDBTable>}
   * @memberof DataWithCursorRawDBTable
   */
  items?: RawDBTable[];
  /**
   * Cursor to get the next page of results (if available).
   * @type {string}
   * @memberof DataWithCursorRawDBTable
   */
  nextCursor?: string;
}
/**
 *
 * @export
 * @interface DataWithLinksObject
 */
export interface DataWithLinksObject {
  /**
   *
   * @type {Array<DataWithLinksObjectItemsItem>}
   * @memberof DataWithLinksObject
   */
  items?: DataWithLinksObjectItemsItem[];
}
/**
 *
 * @export
 * @interface DataWithLinksObjectItemsItem
 */
export interface DataWithLinksObjectItemsItem {
  /**
   *
   * @type {string}
   * @memberof DataWithLinksObjectItemsItem
   */
  downloadUrl?: string;
}
/**
 *
 * @export
 * @interface DatapointsDeleteQuery
 */
export interface DatapointsDeleteQuery {
  /**
   * List of delete filters
   * @type {Array<DatapointsDeleteRequest>}
   * @memberof DatapointsDeleteQuery
   */
  items: DatapointsDeleteRequest[];
}
/**
 *
 * @export
 * @interface DatapointsDeleteRange
 */
export interface DatapointsDeleteRange {
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {number}
   * @memberof DatapointsDeleteRange
   */
  inclusiveBegin: number;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {number}
   * @memberof DatapointsDeleteRange
   */
  exclusiveEnd?: number;
}
/**
 * @type DatapointsDeleteRequest
 * Select timeseries and datapoints to delete.
 * @export
 */
export type DatapointsDeleteRequest =
  | DatapointsDeleteRequestMember
  | DatapointsDeleteRequestMember1;

/**
 *
 * @export
 * @interface DatapointsDeleteRequestMember
 */
export interface DatapointsDeleteRequestMember {
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {number}
   * @memberof DatapointsDeleteRequestMember
   */
  inclusiveBegin: number;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {number}
   * @memberof DatapointsDeleteRequestMember
   */
  exclusiveEnd?: number;
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof DatapointsDeleteRequestMember
   */
  id?: number;
}
/**
 *
 * @export
 * @interface DatapointsDeleteRequestMember1
 */
export interface DatapointsDeleteRequestMember1 {
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {number}
   * @memberof DatapointsDeleteRequestMember1
   */
  inclusiveBegin: number;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {number}
   * @memberof DatapointsDeleteRequestMember1
   */
  exclusiveEnd?: number;
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof DatapointsDeleteRequestMember1
   */
  externalId?: string;
}
/**
 *
 * @export
 * @interface DatapointsDeleteRequestMember1Member
 */
export interface DatapointsDeleteRequestMember1Member {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof DatapointsDeleteRequestMember1Member
   */
  externalId?: string;
}
/**
 *
 * @export
 * @interface DatapointsDeleteRequestMemberMember
 */
export interface DatapointsDeleteRequestMemberMember {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof DatapointsDeleteRequestMemberMember
   */
  id?: number;
}
/**
 *
 * @export
 * @interface DatapointsGetAggregateDatapoint
 */
export interface DatapointsGetAggregateDatapoint {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof DatapointsGetAggregateDatapoint
   */
  id: number;
  /**
   * External id of the timeseries the datapoints belong to.
   * @type {string}
   * @memberof DatapointsGetAggregateDatapoint
   */
  externalId?: string;
  /**
   * The list of datapoints
   * @type {Array<GetAggregateDatapoint>}
   * @memberof DatapointsGetAggregateDatapoint
   */
  datapoints: GetAggregateDatapoint[];
}
/**
 *
 * @export
 * @interface DatapointsGetAggregateDatapointMember
 */
export interface DatapointsGetAggregateDatapointMember {
  /**
   * The list of datapoints
   * @type {Array<GetAggregateDatapoint>}
   * @memberof DatapointsGetAggregateDatapointMember
   */
  datapoints: GetAggregateDatapoint[];
}
/**
 * @type DatapointsGetDatapoint
 * @export
 */
export type DatapointsGetDatapoint =
  | DatapointsGetDoubleDatapoint
  | DatapointsGetStringDatapoint;

/**
 *
 * @export
 * @interface DatapointsGetDoubleDatapoint
 */
export interface DatapointsGetDoubleDatapoint {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof DatapointsGetDoubleDatapoint
   */
  id: number;
  /**
   * External id of the timeseries the datapoints belong to.
   * @type {string}
   * @memberof DatapointsGetDoubleDatapoint
   */
  externalId?: string;
  /**
   * Whether the time series is string valued or not.
   * @type {boolean}
   * @memberof DatapointsGetDoubleDatapoint
   */
  isString: boolean;
  /**
   * The list of datapoints
   * @type {Array<GetDoubleDatapoint>}
   * @memberof DatapointsGetDoubleDatapoint
   */
  datapoints: GetDoubleDatapoint[];
}
/**
 *
 * @export
 * @interface DatapointsGetDoubleDatapointMember
 */
export interface DatapointsGetDoubleDatapointMember {
  /**
   * Whether the time series is string valued or not.
   * @type {boolean}
   * @memberof DatapointsGetDoubleDatapointMember
   */
  isString: boolean;
  /**
   * The list of datapoints
   * @type {Array<GetDoubleDatapoint>}
   * @memberof DatapointsGetDoubleDatapointMember
   */
  datapoints: GetDoubleDatapoint[];
}
/**
 *
 * @export
 * @interface DatapointsGetStringDatapoint
 */
export interface DatapointsGetStringDatapoint {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof DatapointsGetStringDatapoint
   */
  id: number;
  /**
   * External id of the timeseries the datapoints belong to.
   * @type {string}
   * @memberof DatapointsGetStringDatapoint
   */
  externalId?: string;
  /**
   * Whether the time series is string valued or not.
   * @type {boolean}
   * @memberof DatapointsGetStringDatapoint
   */
  isString: boolean;
  /**
   * The list of datapoints
   * @type {Array<GetStringDatapoint>}
   * @memberof DatapointsGetStringDatapoint
   */
  datapoints: GetStringDatapoint[];
}
/**
 *
 * @export
 * @interface DatapointsGetStringDatapointMember
 */
export interface DatapointsGetStringDatapointMember {
  /**
   * Whether the time series is string valued or not.
   * @type {boolean}
   * @memberof DatapointsGetStringDatapointMember
   */
  isString: boolean;
  /**
   * The list of datapoints
   * @type {Array<GetStringDatapoint>}
   * @memberof DatapointsGetStringDatapointMember
   */
  datapoints: GetStringDatapoint[];
}
/**
 *
 * @export
 * @interface DatapointsInsertProperties
 */
export interface DatapointsInsertProperties {
  /**
   * The list of datapoints. Total limit per request is 100000 datapoints.
   * @type {Array<PostDatapoint>}
   * @memberof DatapointsInsertProperties
   */
  datapoints: PostDatapoint[];
}
/**
 *
 * @export
 * @interface DatapointsInsertQuery
 */
export interface DatapointsInsertQuery {
  /**
   *
   * @type {Array<DatapointsPostDatapoint>}
   * @memberof DatapointsInsertQuery
   */
  items: DatapointsPostDatapoint[];
}
/**
 *
 * @export
 * @interface DatapointsLatestQuery
 */
export interface DatapointsLatestQuery {
  /**
   * List of latest queries
   * @type {Array<LatestDataBeforeRequest>}
   * @memberof DatapointsLatestQuery
   */
  items: LatestDataBeforeRequest[];
}
/**
 *
 * @export
 * @interface DatapointsMetadata
 */
export interface DatapointsMetadata {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof DatapointsMetadata
   */
  id: number;
  /**
   * External id of the timeseries the datapoints belong to.
   * @type {string}
   * @memberof DatapointsMetadata
   */
  externalId?: string;
}
/**
 *
 * @export
 * @interface DatapointsMultiQuery
 */
export interface DatapointsMultiQuery {
  /**
   *
   * @type {Array<DatapointsQuery>}
   * @memberof DatapointsMultiQuery
   */
  items: DatapointsQuery[];
  /**
   *
   * @type {TimestampOrStringStart}
   * @memberof DatapointsMultiQuery
   */
  start?: TimestampOrStringStart;
  /**
   *
   * @type {TimestampOrStringEnd}
   * @memberof DatapointsMultiQuery
   */
  end?: TimestampOrStringEnd;
  /**
   * Return up to this number of datapoints.
   * @type {number}
   * @memberof DatapointsMultiQuery
   */
  limit?: number;
  /**
   * The aggregates to be returned. This value overrides top-level default aggregates list when set. Specify all aggregates to be retrieved here. Specify empty array if this sub-query needs to return datapoints without aggregation.
   * @type {Array<Aggregate>}
   * @memberof DatapointsMultiQuery
   */
  aggregates?: Aggregate[];
  /**
   * The time granularity size and unit to aggregate over.
   * @type {string}
   * @memberof DatapointsMultiQuery
   */
  granularity?: string;
  /**
   * Whether to include the last datapoint before the requested time period,and the first one after the requested period. This can be useful for interpolating data. Not available for aggregates.
   * @type {boolean}
   * @memberof DatapointsMultiQuery
   */
  includeOutsidePoints?: boolean;
}
/**
 * List of responses. Order matches the requests order.
 * @export
 * @interface DatapointsOrAggregatesResponse
 */
export interface DatapointsOrAggregatesResponse {
  /**
   *
   * @type {Array<DatapointsOrAggregatesResponseItemsItem>}
   * @memberof DatapointsOrAggregatesResponse
   */
  items: DatapointsOrAggregatesResponseItemsItem[];
}
/**
 * @type DatapointsOrAggregatesResponseItemsItem
 * @export
 */
export type DatapointsOrAggregatesResponseItemsItem =
  | DatapointsGetAggregateDatapoint
  | DatapointsGetDatapoint;

/**
 * @type DatapointsPostDatapoint
 * @export
 */
export type DatapointsPostDatapoint =
  | DatapointsPostDatapointMember
  | DatapointsPostDatapointMember1;

/**
 *
 * @export
 * @interface DatapointsPostDatapointMember
 */
export interface DatapointsPostDatapointMember {
  /**
   * The list of datapoints. Total limit per request is 100000 datapoints.
   * @type {Array<PostDatapoint>}
   * @memberof DatapointsPostDatapointMember
   */
  datapoints: PostDatapoint[];
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof DatapointsPostDatapointMember
   */
  id?: number;
}
/**
 *
 * @export
 * @interface DatapointsPostDatapointMember1
 */
export interface DatapointsPostDatapointMember1 {
  /**
   * The list of datapoints. Total limit per request is 100000 datapoints.
   * @type {Array<PostDatapoint>}
   * @memberof DatapointsPostDatapointMember1
   */
  datapoints: PostDatapoint[];
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof DatapointsPostDatapointMember1
   */
  externalId?: string;
}
/**
 *
 * @export
 * @interface DatapointsPostDatapointMember1Member
 */
export interface DatapointsPostDatapointMember1Member {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof DatapointsPostDatapointMember1Member
   */
  externalId?: string;
}
/**
 *
 * @export
 * @interface DatapointsPostDatapointMemberMember
 */
export interface DatapointsPostDatapointMemberMember {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof DatapointsPostDatapointMemberMember
   */
  id?: number;
}
/**
 * @type DatapointsQuery
 * Parameters describing a query for datapoints.
 * @export
 */
export type DatapointsQuery = DatapointsQueryMember | DatapointsQueryMember1;

/**
 *
 * @export
 * @interface DatapointsQueryMember
 */
export interface DatapointsQueryMember {
  /**
   *
   * @type {TimestampOrStringStart}
   * @memberof DatapointsQueryMember
   */
  start?: TimestampOrStringStart;
  /**
   *
   * @type {TimestampOrStringEnd}
   * @memberof DatapointsQueryMember
   */
  end?: TimestampOrStringEnd;
  /**
   * Return up to this number of datapoints.
   * @type {number}
   * @memberof DatapointsQueryMember
   */
  limit?: number;
  /**
   * The aggregates to be returned.  Use default if null. An empty string must be sent to get raw data if the default is a set of aggregates.
   * @type {Array<Aggregate>}
   * @memberof DatapointsQueryMember
   */
  aggregates?: Aggregate[];
  /**
   * The granularity size and granularity of the aggregates.
   * @type {string}
   * @memberof DatapointsQueryMember
   */
  granularity?: string;
  /**
   * Whether to include the last datapoint before the requested time period,and the first one after the requested period. This can be useful for interpolating data. Not available for aggregates.
   * @type {boolean}
   * @memberof DatapointsQueryMember
   */
  includeOutsidePoints?: boolean;
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof DatapointsQueryMember
   */
  id?: number;
}
/**
 *
 * @export
 * @interface DatapointsQueryMember1
 */
export interface DatapointsQueryMember1 {
  /**
   *
   * @type {TimestampOrStringStart}
   * @memberof DatapointsQueryMember1
   */
  start?: TimestampOrStringStart;
  /**
   *
   * @type {TimestampOrStringEnd}
   * @memberof DatapointsQueryMember1
   */
  end?: TimestampOrStringEnd;
  /**
   * Return up to this number of datapoints.
   * @type {number}
   * @memberof DatapointsQueryMember1
   */
  limit?: number;
  /**
   * The aggregates to be returned.  Use default if null. An empty string must be sent to get raw data if the default is a set of aggregates.
   * @type {Array<Aggregate>}
   * @memberof DatapointsQueryMember1
   */
  aggregates?: Aggregate[];
  /**
   * The granularity size and granularity of the aggregates.
   * @type {string}
   * @memberof DatapointsQueryMember1
   */
  granularity?: string;
  /**
   * Whether to include the last datapoint before the requested time period,and the first one after the requested period. This can be useful for interpolating data. Not available for aggregates.
   * @type {boolean}
   * @memberof DatapointsQueryMember1
   */
  includeOutsidePoints?: boolean;
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof DatapointsQueryMember1
   */
  externalId?: string;
}
/**
 *
 * @export
 * @interface DatapointsQueryMember1Member
 */
export interface DatapointsQueryMember1Member {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof DatapointsQueryMember1Member
   */
  externalId?: string;
}
/**
 *
 * @export
 * @interface DatapointsQueryMemberMember
 */
export interface DatapointsQueryMemberMember {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof DatapointsQueryMemberMember
   */
  id?: number;
}
/**
 *
 * @export
 * @interface DatapointsQueryProperties
 */
export interface DatapointsQueryProperties {
  /**
   *
   * @type {TimestampOrStringStart}
   * @memberof DatapointsQueryProperties
   */
  start?: TimestampOrStringStart;
  /**
   *
   * @type {TimestampOrStringEnd}
   * @memberof DatapointsQueryProperties
   */
  end?: TimestampOrStringEnd;
  /**
   * Return up to this number of datapoints.
   * @type {number}
   * @memberof DatapointsQueryProperties
   */
  limit?: number;
  /**
   * The aggregates to be returned.  Use default if null. An empty string must be sent to get raw data if the default is a set of aggregates.
   * @type {Array<Aggregate>}
   * @memberof DatapointsQueryProperties
   */
  aggregates?: Aggregate[];
  /**
   * The granularity size and granularity of the aggregates.
   * @type {string}
   * @memberof DatapointsQueryProperties
   */
  granularity?: string;
  /**
   * Whether to include the last datapoint before the requested time period,and the first one after the requested period. This can be useful for interpolating data. Not available for aggregates.
   * @type {boolean}
   * @memberof DatapointsQueryProperties
   */
  includeOutsidePoints?: boolean;
}
/**
 * List of responses. Order matches the requests order.
 * @export
 * @interface DatapointsResponse
 */
export interface DatapointsResponse {
  /**
   *
   * @type {Array<DatapointsGetDatapoint>}
   * @memberof DatapointsResponse
   */
  items: DatapointsGetDatapoint[];
}
/**
 *
 * @export
 * @interface DeleteAssetMapping3D
 */
export interface DeleteAssetMapping3D {
  /**
   * The ID of the node.
   * @type {number}
   * @memberof DeleteAssetMapping3D
   */
  nodeId: number;
  /**
   * The ID of the associated asset (Cognite\'s Assets API).
   * @type {number}
   * @memberof DeleteAssetMapping3D
   */
  assetId: number;
}
/**
 *
 * @export
 * @interface DuplicatedIdsInRequestResponse
 */
export interface DuplicatedIdsInRequestResponse {
  /**
   *
   * @type {DuplicatedIdsInRequestResponseError}
   * @memberof DuplicatedIdsInRequestResponse
   */
  error: DuplicatedIdsInRequestResponseError;
}
/**
 * Error details
 * @export
 * @interface DuplicatedIdsInRequestResponseError
 */
export interface DuplicatedIdsInRequestResponseError {
  /**
   * HTTP status code
   * @type {number}
   * @memberof DuplicatedIdsInRequestResponseError
   */
  code: number;
  /**
   * Error message
   * @type {string}
   * @memberof DuplicatedIdsInRequestResponseError
   */
  message: string;
  /**
   * Items which are duplicated
   * @type {Array<DuplicatedIdsInRequestResponseErrorDuplicatedItem>}
   * @memberof DuplicatedIdsInRequestResponseError
   */
  duplicated: DuplicatedIdsInRequestResponseErrorDuplicatedItem[];
}
/**
 * @type DuplicatedIdsInRequestResponseErrorDuplicatedItem
 * Ids and ExternalIds which are duplicated in request
 * @export
 */
export type DuplicatedIdsInRequestResponseErrorDuplicatedItem =
  | DuplicatedIdsInRequestResponseErrorDuplicatedItemMember
  | DuplicatedIdsInRequestResponseErrorDuplicatedItemMember1;

/**
 *
 * @export
 * @interface DuplicatedIdsInRequestResponseErrorDuplicatedItemMember
 */
export interface DuplicatedIdsInRequestResponseErrorDuplicatedItemMember {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof DuplicatedIdsInRequestResponseErrorDuplicatedItemMember
   */
  id: number;
}
/**
 *
 * @export
 * @interface DuplicatedIdsInRequestResponseErrorDuplicatedItemMember1
 */
export interface DuplicatedIdsInRequestResponseErrorDuplicatedItemMember1 {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof DuplicatedIdsInRequestResponseErrorDuplicatedItemMember1
   */
  externalId: string;
}
/**
 * @type EitherId
 * @export
 */
export type EitherId = ExternalId | InternalId;

/**
 * Range between two timestamps
 * @export
 * @interface EpochTimestampRange
 */
export interface EpochTimestampRange {
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {number}
   * @memberof EpochTimestampRange
   */
  max?: number;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {number}
   * @memberof EpochTimestampRange
   */
  min?: number;
}
/**
 *
 * @export
 * @interface ErrorResponseObject
 */
export interface ErrorResponseObject {
  /**
   *
   * @type {Error}
   * @memberof ErrorResponseObject
   */
  error: Error;
}
/**
 *
 * @export
 * @interface Event
 */
export interface Event {
  /**
   * External Id provided by client. Should be unique within the project
   * @type {string}
   * @memberof Event
   */
  externalId?: string;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {number}
   * @memberof Event
   */
  startTime?: number;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {number}
   * @memberof Event
   */
  endTime?: number;
  /**
   * Type of the event, e.g \'failure\'.
   * @type {string}
   * @memberof Event
   */
  type?: string;
  /**
   * Subtype of the event, e.g \'electrical\'.
   * @type {string}
   * @memberof Event
   */
  subtype?: string;
  /**
   * Textual description of the event.
   * @type {string}
   * @memberof Event
   */
  description?: string;
  /**
   * Custom, application specific metadata. String key -> String value
   * @type {{ [key: string]: string; }}
   * @memberof Event
   */
  metadata?: { [key: string]: string };
  /**
   * Asset IDs of related equipment that this event relates to.
   * @type {Array<number>}
   * @memberof Event
   */
  assetIds?: number[];
  /**
   * The source of this event.
   * @type {string}
   * @memberof Event
   */
  source?: string;
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof Event
   */
  id: number;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof Event
   */
  lastUpdatedTime: Date;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof Event
   */
  createdTime: Date;
}
/**
 * @type EventChange
 * @export
 */
export type EventChange = EventChangeByExternalId | EventChangeById;

/**
 *
 * @export
 * @interface EventChangeByExternalId
 */
export interface EventChangeByExternalId {
  /**
   *
   * @type {EventPatchUpdate}
   * @memberof EventChangeByExternalId
   */
  update: EventPatchUpdate;
  /**
   * External Id provided by client. Should be unique within the project
   * @type {string}
   * @memberof EventChangeByExternalId
   */
  externalId: string;
}
/**
 *
 * @export
 * @interface EventChangeByExternalIdMember
 */
export interface EventChangeByExternalIdMember {
  /**
   * External Id provided by client. Should be unique within the project
   * @type {string}
   * @memberof EventChangeByExternalIdMember
   */
  externalId: string;
}
/**
 *
 * @export
 * @interface EventChangeById
 */
export interface EventChangeById {
  /**
   *
   * @type {EventPatchUpdate}
   * @memberof EventChangeById
   */
  update: EventPatchUpdate;
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof EventChangeById
   */
  id: number;
}
/**
 *
 * @export
 * @interface EventChangeByIdMember
 */
export interface EventChangeByIdMember {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof EventChangeByIdMember
   */
  id: number;
}
/**
 * Filter on events filter with exact match
 * @export
 * @interface EventFilter
 */
export interface EventFilter {
  /**
   *
   * @type {EpochTimestampRange}
   * @memberof EventFilter
   */
  startTime?: EpochTimestampRange;
  /**
   *
   * @type {EpochTimestampRange}
   * @memberof EventFilter
   */
  endTime?: EpochTimestampRange;
  /**
   * Custom, application specific metadata. String key -> String value
   * @type {{ [key: string]: string; }}
   * @memberof EventFilter
   */
  metadata?: { [key: string]: string };
  /**
   * Asset IDs of related equipment that this event relates to.
   * @type {Array<number>}
   * @memberof EventFilter
   */
  assetIds?: number[];
  /**
   * The source of this event.
   * @type {string}
   * @memberof EventFilter
   */
  source?: string;
  /**
   * The event type
   * @type {string}
   * @memberof EventFilter
   */
  type?: string;
  /**
   * The event subtype
   * @type {string}
   * @memberof EventFilter
   */
  subtype?: string;
  /**
   *
   * @type {EpochTimestampRange}
   * @memberof EventFilter
   */
  createdTime?: EpochTimestampRange;
  /**
   *
   * @type {EpochTimestampRange}
   * @memberof EventFilter
   */
  lastUpdatedTime?: EpochTimestampRange;
  /**
   * External Id provided by client. Should be unique within the project
   * @type {string}
   * @memberof EventFilter
   */
  externalIdPrefix?: string;
}
/**
 * Filter request for events. Filters exact field matching or timestamp ranges inclusive min and max.
 * @export
 * @interface EventFilterRequest
 */
export interface EventFilterRequest {
  /**
   *
   * @type {EventFilter}
   * @memberof EventFilterRequest
   */
  filter?: EventFilter;
  /**
   * <- Limits the maximum number of results to be returned by single request. In case there are more results to the request \'nextCursor\' attribute will be provided as part of response. Request may contain less results than request limit.
   * @type {number}
   * @memberof EventFilterRequest
   */
  limit?: number;
  /**
   *
   * @type {string}
   * @memberof EventFilterRequest
   */
  cursor?: string;
}
/**
 *
 * @export
 * @interface EventFilterRequestMember
 */
export interface EventFilterRequestMember {
  /**
   *
   * @type {EventFilter}
   * @memberof EventFilterRequestMember
   */
  filter?: EventFilter;
  /**
   * <- Limits the maximum number of results to be returned by single request. In case there are more results to the request \'nextCursor\' attribute will be provided as part of response. Request may contain less results than request limit.
   * @type {number}
   * @memberof EventFilterRequestMember
   */
  limit?: number;
}
/**
 *
 * @export
 * @interface EventMember
 */
export interface EventMember {
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof EventMember
   */
  lastUpdatedTime: Date;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof EventMember
   */
  createdTime: Date;
}
/**
 * Changes will be applied to event.
 * @export
 * @interface EventPatch
 */
export interface EventPatch {
  /**
   *
   * @type {EventPatchUpdate}
   * @memberof EventPatch
   */
  update: EventPatchUpdate;
}
/**
 *
 * @export
 * @interface EventPatchUpdate
 */
export interface EventPatchUpdate {
  /**
   *
   * @type {SinglePatchString}
   * @memberof EventPatchUpdate
   */
  externalId?: SinglePatchString;
  /**
   *
   * @type {SinglePatchLong}
   * @memberof EventPatchUpdate
   */
  startTime?: SinglePatchLong;
  /**
   *
   * @type {SinglePatchLong}
   * @memberof EventPatchUpdate
   */
  endTime?: SinglePatchLong;
  /**
   *
   * @type {SinglePatchString}
   * @memberof EventPatchUpdate
   */
  description?: SinglePatchString;
  /**
   *
   * @type {ObjectPatch}
   * @memberof EventPatchUpdate
   */
  metadata?: ObjectPatch;
  /**
   *
   * @type {ArrayPatchLong}
   * @memberof EventPatchUpdate
   */
  assetIds?: ArrayPatchLong;
  /**
   *
   * @type {SinglePatchString}
   * @memberof EventPatchUpdate
   */
  source?: SinglePatchString;
  /**
   *
   * @type {SinglePatchString}
   * @memberof EventPatchUpdate
   */
  type?: SinglePatchString;
  /**
   *
   * @type {SinglePatchString}
   * @memberof EventPatchUpdate
   */
  subtype?: SinglePatchString;
}
/**
 *
 * @export
 * @interface EventResponse
 */
export interface EventResponse {
  /**
   *
   * @type {Array<Event>}
   * @memberof EventResponse
   */
  items: Event[];
}
/**
 *
 * @export
 * @interface EventSearch
 */
export interface EventSearch {
  /**
   * text to search in description field across events
   * @type {string}
   * @memberof EventSearch
   */
  description?: string;
}
/**
 * Filter on events filter with exact match
 * @export
 * @interface EventSearchRequest
 */
export interface EventSearchRequest {
  /**
   *
   * @type {EventFilter}
   * @memberof EventSearchRequest
   */
  filter?: EventFilter;
  /**
   *
   * @type {EventSearch}
   * @memberof EventSearchRequest
   */
  search?: EventSearch;
  /**
   * <- Limits the maximum number of results to be returned by single request. In case there are more results to the request \'nextCursor\' attribute will be provided as part of response. Request may contain less results than request limit.
   * @type {number}
   * @memberof EventSearchRequest
   */
  limit?: number;
}
/**
 *
 * @export
 * @interface EventWithCursorResponse
 */
export interface EventWithCursorResponse {
  /**
   *
   * @type {Array<Event>}
   * @memberof EventWithCursorResponse
   */
  items: Event[];
  /**
   * Cursor to get the next page of results (if available).
   * @type {string}
   * @memberof EventWithCursorResponse
   */
  nextCursor?: string;
}
/**
 *
 * @export
 * @interface EventsAcl
 */
export interface EventsAcl {
  /**
   *
   * @type {CogniteeventsAclAcl}
   * @memberof EventsAcl
   */
  eventsAcl?: CogniteeventsAclAcl;
}
/**
 * Representation of a physical asset, e.g plant or piece of equipment
 * @export
 * @interface ExternalAsset
 */
export interface ExternalAsset {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof ExternalAsset
   */
  externalId?: string;
  /**
   * Name of asset. Often referred to as tag.
   * @type {string}
   * @memberof ExternalAsset
   */
  name: string;
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof ExternalAsset
   */
  parentId?: number;
  /**
   * Description of asset.
   * @type {string}
   * @memberof ExternalAsset
   */
  description?: string;
  /**
   * Custom, application specific metadata. String key -> String value
   * @type {{ [key: string]: string; }}
   * @memberof ExternalAsset
   */
  metadata?: { [key: string]: string };
  /**
   * The source of this asset
   * @type {string}
   * @memberof ExternalAsset
   */
  source?: string;
}
/**
 * An event represents something that happened at a given interval in time, e.g a failure, a work order etc.
 * @export
 * @interface ExternalEvent
 */
export interface ExternalEvent {
  /**
   * External Id provided by client. Should be unique within the project
   * @type {string}
   * @memberof ExternalEvent
   */
  externalId?: string;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {number}
   * @memberof ExternalEvent
   */
  startTime?: number;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {number}
   * @memberof ExternalEvent
   */
  endTime?: number;
  /**
   * Type of the event, e.g \'failure\'.
   * @type {string}
   * @memberof ExternalEvent
   */
  type?: string;
  /**
   * Subtype of the event, e.g \'electrical\'.
   * @type {string}
   * @memberof ExternalEvent
   */
  subtype?: string;
  /**
   * Textual description of the event.
   * @type {string}
   * @memberof ExternalEvent
   */
  description?: string;
  /**
   * Custom, application specific metadata. String key -> String value
   * @type {{ [key: string]: string; }}
   * @memberof ExternalEvent
   */
  metadata?: { [key: string]: string };
  /**
   * Asset IDs of related equipment that this event relates to.
   * @type {Array<number>}
   * @memberof ExternalEvent
   */
  assetIds?: number[];
  /**
   * The source of this event.
   * @type {string}
   * @memberof ExternalEvent
   */
  source?: string;
}
/**
 *
 * @export
 * @interface ExternalFilesMetadata
 */
export interface ExternalFilesMetadata {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof ExternalFilesMetadata
   */
  externalId?: string;
  /**
   * Name of the file.
   * @type {string}
   * @memberof ExternalFilesMetadata
   */
  name: string;
  /**
   * The source of the file.
   * @type {string}
   * @memberof ExternalFilesMetadata
   */
  source?: string;
  /**
   * File type. E.g. text/plain, application/pdf, ..
   * @type {string}
   * @memberof ExternalFilesMetadata
   */
  mimeType?: string;
  /**
   * Custom, application specific metadata. String key -> String value
   * @type {{ [key: string]: string; }}
   * @memberof ExternalFilesMetadata
   */
  metadata?: { [key: string]: string };
  /**
   *
   * @type {Array<number>}
   * @memberof ExternalFilesMetadata
   */
  assetIds?: number[];
}
/**
 *
 * @export
 * @interface ExternalId
 */
export interface ExternalId {
  /**
   * External Id provided by client. Should be unique within the project
   * @type {string}
   * @memberof ExternalId
   */
  externalId: string;
}
/**
 *
 * @export
 * @interface ExternalIdsAlreadyExistResponse
 */
export interface ExternalIdsAlreadyExistResponse {
  /**
   *
   * @type {ExternalIdsAlreadyExistResponseError}
   * @memberof ExternalIdsAlreadyExistResponse
   */
  error: ExternalIdsAlreadyExistResponseError;
}
/**
 * Error details
 * @export
 * @interface ExternalIdsAlreadyExistResponseError
 */
export interface ExternalIdsAlreadyExistResponseError {
  /**
   * HTTP status code
   * @type {number}
   * @memberof ExternalIdsAlreadyExistResponseError
   */
  code: number;
  /**
   * Error message
   * @type {string}
   * @memberof ExternalIdsAlreadyExistResponseError
   */
  message: string;
  /**
   * Items which are duplicated
   * @type {Array<ExternalIdsAlreadyExistResponseErrorDuplicatedItem>}
   * @memberof ExternalIdsAlreadyExistResponseError
   */
  duplicated: ExternalIdsAlreadyExistResponseErrorDuplicatedItem[];
}
/**
 * ExternalIds which already exist
 * @export
 * @interface ExternalIdsAlreadyExistResponseErrorDuplicatedItem
 */
export interface ExternalIdsAlreadyExistResponseErrorDuplicatedItem {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof ExternalIdsAlreadyExistResponseErrorDuplicatedItem
   */
  externalId: string;
}
/**
 * Changes will be applied to file.
 * @export
 * @interface FileChange
 */
export interface FileChange {
  /**
   *
   * @type {FileChangeUpdate1}
   * @memberof FileChange
   */
  update: FileChangeUpdate1;
}
/**
 * @type FileChangeUpdate
 * @export
 */
export type FileChangeUpdate =
  | FileChangeUpdateByExternalId
  | FileChangeUpdateById;

/**
 *
 * @export
 * @interface FileChangeUpdate1
 */
export interface FileChangeUpdate1 {
  /**
   *
   * @type {SinglePatchString}
   * @memberof FileChangeUpdate1
   */
  externalId?: SinglePatchString;
  /**
   *
   * @type {SinglePatchString}
   * @memberof FileChangeUpdate1
   */
  source?: SinglePatchString;
  /**
   *
   * @type {ObjectPatch}
   * @memberof FileChangeUpdate1
   */
  metadata?: ObjectPatch;
  /**
   *
   * @type {ArrayPatchLong}
   * @memberof FileChangeUpdate1
   */
  assetIds?: ArrayPatchLong;
}
/**
 *
 * @export
 * @interface FileChangeUpdateByExternalId
 */
export interface FileChangeUpdateByExternalId {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof FileChangeUpdateByExternalId
   */
  externalId: string;
  /**
   *
   * @type {FileChangeUpdate1}
   * @memberof FileChangeUpdateByExternalId
   */
  update: FileChangeUpdate1;
}
/**
 *
 * @export
 * @interface FileChangeUpdateByExternalIdMember
 */
export interface FileChangeUpdateByExternalIdMember {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof FileChangeUpdateByExternalIdMember
   */
  externalId: string;
}
/**
 *
 * @export
 * @interface FileChangeUpdateById
 */
export interface FileChangeUpdateById {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof FileChangeUpdateById
   */
  id: number;
  /**
   *
   * @type {FileChangeUpdate1}
   * @memberof FileChangeUpdateById
   */
  update: FileChangeUpdate1;
}
/**
 *
 * @export
 * @interface FileChangeUpdateByIdMember
 */
export interface FileChangeUpdateByIdMember {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof FileChangeUpdateByIdMember
   */
  id: number;
}
/**
 *
 * @export
 * @interface FileExternalId
 */
export interface FileExternalId {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof FileExternalId
   */
  externalId?: string;
}
/**
 * Filter on files with exact match
 * @export
 * @interface FileFilter
 */
export interface FileFilter {
  /**
   *
   * @type {FileFilterFilter}
   * @memberof FileFilter
   */
  filter?: FileFilterFilter;
  /**
   * <- Maximum number of items that the client want to get back.
   * @type {number}
   * @memberof FileFilter
   */
  limit?: number;
}
/**
 *
 * @export
 * @interface FileFilterFilter
 */
export interface FileFilterFilter {
  /**
   * Name of the file.
   * @type {string}
   * @memberof FileFilterFilter
   */
  name?: string;
  /**
   * File type. E.g. text/plain, application/pdf, ..
   * @type {string}
   * @memberof FileFilterFilter
   */
  mimeType?: string;
  /**
   * Custom, application specific metadata. String key -> String value
   * @type {{ [key: string]: string; }}
   * @memberof FileFilterFilter
   */
  metadata?: { [key: string]: string };
  /**
   * Only include files that reference these specific asset IDs.
   * @type {Array<number>}
   * @memberof FileFilterFilter
   */
  assetIds?: number[];
  /**
   * The source of this event.
   * @type {string}
   * @memberof FileFilterFilter
   */
  source?: string;
  /**
   *
   * @type {EpochTimestampRange}
   * @memberof FileFilterFilter
   */
  createdTime?: EpochTimestampRange;
  /**
   *
   * @type {EpochTimestampRange}
   * @memberof FileFilterFilter
   */
  lastUpdatedTime?: EpochTimestampRange;
  /**
   *
   * @type {EpochTimestampRange}
   * @memberof FileFilterFilter
   */
  uploadedTime?: EpochTimestampRange;
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof FileFilterFilter
   */
  externalIdPrefix?: string;
  /**
   * Whether or not the actual file is uploaded. This field is returned only by the API, it has no effect in a post body.
   * @type {boolean}
   * @memberof FileFilterFilter
   */
  uploaded?: boolean;
}
/**
 * @type FileIdEither
 * @export
 */
export type FileIdEither = FileExternalId | FileInternalId;

/**
 *
 * @export
 * @interface FileInternalId
 */
export interface FileInternalId {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof FileInternalId
   */
  id?: number;
}
/**
 *
 * @export
 * @interface FileLink
 */
export interface FileLink {
  /**
   *
   * @type {string}
   * @memberof FileLink
   */
  downloadUrl?: string;
}
/**
 *
 * @export
 * @interface FileLinkIds
 */
export interface FileLinkIds {
  /**
   *
   * @type {Array<FileIdEither>}
   * @memberof FileLinkIds
   */
  items?: FileIdEither[];
}
/**
 *
 * @export
 * @interface FilesAcl
 */
export interface FilesAcl {
  /**
   *
   * @type {CognitefilesAclAcl}
   * @memberof FilesAcl
   */
  filesAcl?: CognitefilesAclAcl;
}
/**
 *
 * @export
 * @interface FilesMetadata
 */
export interface FilesMetadata {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof FilesMetadata
   */
  externalId?: string;
  /**
   * Name of the file.
   * @type {string}
   * @memberof FilesMetadata
   */
  name: string;
  /**
   * The source of the file.
   * @type {string}
   * @memberof FilesMetadata
   */
  source?: string;
  /**
   * File type. E.g. text/plain, application/pdf, ..
   * @type {string}
   * @memberof FilesMetadata
   */
  mimeType?: string;
  /**
   * Custom, application specific metadata. String key -> String value
   * @type {{ [key: string]: string; }}
   * @memberof FilesMetadata
   */
  metadata?: { [key: string]: string };
  /**
   *
   * @type {Array<number>}
   * @memberof FilesMetadata
   */
  assetIds?: number[];
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof FilesMetadata
   */
  id: number;
  /**
   * Whether or not the actual file is uploaded.  This field is returned only by the API, it has no effect in a post body.
   * @type {boolean}
   * @memberof FilesMetadata
   */
  uploaded: boolean;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof FilesMetadata
   */
  uploadedTime?: Date;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof FilesMetadata
   */
  createdTime: Date;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof FilesMetadata
   */
  lastUpdatedTime: Date;
}
/**
 *
 * @export
 * @interface FilesMetadataMember
 */
export interface FilesMetadataMember {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof FilesMetadataMember
   */
  id: number;
  /**
   * Whether or not the actual file is uploaded.  This field is returned only by the API, it has no effect in a post body.
   * @type {boolean}
   * @memberof FilesMetadataMember
   */
  uploaded: boolean;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof FilesMetadataMember
   */
  uploadedTime?: Date;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof FilesMetadataMember
   */
  createdTime: Date;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof FilesMetadataMember
   */
  lastUpdatedTime: Date;
}
/**
 * Filter on files with exact match
 * @export
 * @interface FilesSearchFilter
 */
export interface FilesSearchFilter {
  /**
   *
   * @type {FileFilterFilter}
   * @memberof FilesSearchFilter
   */
  filter?: FileFilterFilter;
  /**
   * <- Maximum number of items that the client want to get back.
   * @type {number}
   * @memberof FilesSearchFilter
   */
  limit?: number;
  /**
   *
   * @type {FilesSearchFilterMemberSearch}
   * @memberof FilesSearchFilter
   */
  search?: FilesSearchFilterMemberSearch;
}
/**
 *
 * @export
 * @interface FilesSearchFilterMember
 */
export interface FilesSearchFilterMember {
  /**
   *
   * @type {FilesSearchFilterMemberSearch}
   * @memberof FilesSearchFilterMember
   */
  search?: FilesSearchFilterMemberSearch;
}
/**
 *
 * @export
 * @interface FilesSearchFilterMemberSearch
 */
export interface FilesSearchFilterMemberSearch {
  /**
   * Name of the file.
   * @type {string}
   * @memberof FilesSearchFilterMemberSearch
   */
  name?: string;
}
/**
 *
 * @export
 * @interface Filter
 */
export interface Filter {
  /**
   * Filter on unit (case-sensitive).
   * @type {string}
   * @memberof Filter
   */
  unit?: string;
  /**
   * Filter on isString.
   * @type {boolean}
   * @memberof Filter
   */
  isString?: boolean;
  /**
   * Filter on isStep.
   * @type {boolean}
   * @memberof Filter
   */
  isStep?: boolean;
  /**
   * Filter out timeseries that do not match these metadata fields and values (case-sensitive). Format is {\"key1\":\"value1\",\"key2\":\"value2\"}.
   * @type {object}
   * @memberof Filter
   */
  metadata?: object;
  /**
   * Filter out time series that are not linked to any of these assets.
   * @type {Array<number>}
   * @memberof Filter
   */
  assetIds?: number[];
  /**
   *
   * @type {EpochTimestampRange}
   * @memberof Filter
   */
  createdTime?: EpochTimestampRange;
  /**
   *
   * @type {EpochTimestampRange}
   * @memberof Filter
   */
  lastUpdatedTime?: EpochTimestampRange;
}
/**
 *
 * @export
 * @interface GetAggregateDatapoint
 */
export interface GetAggregateDatapoint {
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof GetAggregateDatapoint
   */
  timestamp: Date;
  /**
   * The integral average value in the aggregate period
   * @type {number}
   * @memberof GetAggregateDatapoint
   */
  average?: number;
  /**
   * The maximum value in the aggregate period
   * @type {number}
   * @memberof GetAggregateDatapoint
   */
  max?: number;
  /**
   * The minimum value in the aggregate period
   * @type {number}
   * @memberof GetAggregateDatapoint
   */
  min?: number;
  /**
   * The number of datapoints in the aggregate period
   * @type {number}
   * @memberof GetAggregateDatapoint
   */
  count?: number;
  /**
   * The sum of the datapoints in the aggregate period
   * @type {number}
   * @memberof GetAggregateDatapoint
   */
  sum?: number;
  /**
   * The interpolated value of the series in the beginning of the aggregate
   * @type {number}
   * @memberof GetAggregateDatapoint
   */
  interpolation?: number;
  /**
   * The last value before or at the beginning of the aggregate.
   * @type {number}
   * @memberof GetAggregateDatapoint
   */
  stepInterpolation?: number;
  /**
   * The variance of the interpolated underlying function.
   * @type {number}
   * @memberof GetAggregateDatapoint
   */
  continuousVariance?: number;
  /**
   * The variance of the datapoint values.
   * @type {number}
   * @memberof GetAggregateDatapoint
   */
  discreteVariance?: number;
  /**
   * The total variation of the interpolated underlying function.
   * @type {number}
   * @memberof GetAggregateDatapoint
   */
  totalVariation?: number;
}
/**
 *
 * @export
 * @interface GetAggregateDatapointMember
 */
export interface GetAggregateDatapointMember {
  /**
   * The integral average value in the aggregate period
   * @type {number}
   * @memberof GetAggregateDatapointMember
   */
  average?: number;
  /**
   * The maximum value in the aggregate period
   * @type {number}
   * @memberof GetAggregateDatapointMember
   */
  max?: number;
  /**
   * The minimum value in the aggregate period
   * @type {number}
   * @memberof GetAggregateDatapointMember
   */
  min?: number;
  /**
   * The number of datapoints in the aggregate period
   * @type {number}
   * @memberof GetAggregateDatapointMember
   */
  count?: number;
  /**
   * The sum of the datapoints in the aggregate period
   * @type {number}
   * @memberof GetAggregateDatapointMember
   */
  sum?: number;
  /**
   * The interpolated value of the series in the beginning of the aggregate
   * @type {number}
   * @memberof GetAggregateDatapointMember
   */
  interpolation?: number;
  /**
   * The last value before or at the beginning of the aggregate.
   * @type {number}
   * @memberof GetAggregateDatapointMember
   */
  stepInterpolation?: number;
  /**
   * The variance of the interpolated underlying function.
   * @type {number}
   * @memberof GetAggregateDatapointMember
   */
  continuousVariance?: number;
  /**
   * The variance of the datapoint values.
   * @type {number}
   * @memberof GetAggregateDatapointMember
   */
  discreteVariance?: number;
  /**
   * The total variation of the interpolated underlying function.
   * @type {number}
   * @memberof GetAggregateDatapointMember
   */
  totalVariation?: number;
}
/**
 *
 * @export
 * @interface GetDatapointMetadata
 */
export interface GetDatapointMetadata {
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof GetDatapointMetadata
   */
  timestamp: Date;
}
/**
 *
 * @export
 * @interface GetDoubleDatapoint
 */
export interface GetDoubleDatapoint {
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof GetDoubleDatapoint
   */
  timestamp: Date;
  /**
   * The data value.
   * @type {number}
   * @memberof GetDoubleDatapoint
   */
  value: number;
}
/**
 *
 * @export
 * @interface GetDoubleDatapointMember
 */
export interface GetDoubleDatapointMember {
  /**
   * The data value.
   * @type {number}
   * @memberof GetDoubleDatapointMember
   */
  value: number;
}
/**
 *
 * @export
 * @interface GetStringDatapoint
 */
export interface GetStringDatapoint {
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof GetStringDatapoint
   */
  timestamp: Date;
  /**
   * The data value.
   * @type {string}
   * @memberof GetStringDatapoint
   */
  value: string;
}
/**
 *
 * @export
 * @interface GetStringDatapointMember
 */
export interface GetStringDatapointMember {
  /**
   * The data value.
   * @type {string}
   * @memberof GetStringDatapointMember
   */
  value: string;
}
/**
 *
 * @export
 * @interface GetTimeSeriesMetadataDTO
 */
export interface GetTimeSeriesMetadataDTO {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof GetTimeSeriesMetadataDTO
   */
  id: number;
  /**
   * Externally supplied id of the time series
   * @type {string}
   * @memberof GetTimeSeriesMetadataDTO
   */
  externalId?: string;
  /**
   * Name of time series
   * @type {string}
   * @memberof GetTimeSeriesMetadataDTO
   */
  name?: string;
  /**
   * Whether the time series is string valued or not.
   * @type {boolean}
   * @memberof GetTimeSeriesMetadataDTO
   */
  isString: boolean;
  /**
   * Additional metadata. String key -> String value.
   * @type {object}
   * @memberof GetTimeSeriesMetadataDTO
   */
  metadata?: object;
  /**
   * The physical unit of the time series.
   * @type {string}
   * @memberof GetTimeSeriesMetadataDTO
   */
  unit?: string;
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof GetTimeSeriesMetadataDTO
   */
  assetId?: number;
  /**
   * Whether the time series is a step series or not.
   * @type {boolean}
   * @memberof GetTimeSeriesMetadataDTO
   */
  isStep: boolean;
  /**
   * Description of the time series.
   * @type {string}
   * @memberof GetTimeSeriesMetadataDTO
   */
  description?: string;
  /**
   * Security categories required in order to access this time series.
   * @type {Array<number>}
   * @memberof GetTimeSeriesMetadataDTO
   */
  securityCategories?: number[];
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof GetTimeSeriesMetadataDTO
   */
  createdTime: Date;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof GetTimeSeriesMetadataDTO
   */
  lastUpdatedTime: Date;
}
/**
 *
 * @export
 * @interface Group
 */
export interface Group {
  /**
   * Name of the group
   * @type {string}
   * @memberof Group
   */
  name: string;
  /**
   * ID of the group in the source. If this is the same ID as a group in the IDP, a user in that group will implicitly be a part of this group as well.
   * @type {string}
   * @memberof Group
   */
  sourceId?: string;
  /**
   *
   * @type {Array<CogniteCapabilityItem>}
   * @memberof Group
   */
  capabilities?: CogniteCapabilityItem[];
  /**
   *
   * @type {number}
   * @memberof Group
   */
  id: number;
  /**
   *
   * @type {boolean}
   * @memberof Group
   */
  isDeleted: boolean;
  /**
   *
   * @type {Date}
   * @memberof Group
   */
  deletedTime?: Date;
}
/**
 * A specification for creating a new group
 * @export
 * @interface GroupSpec
 */
export interface GroupSpec {
  /**
   * Name of the group
   * @type {string}
   * @memberof GroupSpec
   */
  name: string;
  /**
   * ID of the group in the source. If this is the same ID as a group in the IDP, a user in that group will implicitly be a part of this group as well.
   * @type {string}
   * @memberof GroupSpec
   */
  sourceId?: string;
  /**
   *
   * @type {Array<CogniteCapabilityItem>}
   * @memberof GroupSpec
   */
  capabilities?: CogniteCapabilityItem[];
}
/**
 *
 * @export
 * @interface GroupsAcl
 */
export interface GroupsAcl {
  /**
   *
   * @type {CognitegroupsAclAcl}
   * @memberof GroupsAcl
   */
  groupsAcl?: CognitegroupsAclAcl;
}
/**
 * An ID JWT token
 * @export
 * @interface IdToken
 */
export interface IdToken {
  /**
   * The subject of the token
   * @type {string}
   * @memberof IdToken
   */
  sub: string;
  /**
   * Which CDF project the subject is in
   * @type {string}
   * @memberof IdToken
   */
  projectName: string;
  /**
   * Which groups (by id) the subject is in
   * @type {Array<number>}
   * @memberof IdToken
   */
  groups: number[];
  /**
   * The signing key id
   * @type {string}
   * @memberof IdToken
   */
  signingKey: string;
  /**
   * The expiration time of the token in seconds (unix)
   * @type {number}
   * @memberof IdToken
   */
  exp: number;
}
/**
 *
 * @export
 * @interface InlineObject
 */
export interface InlineObject {
  /**
   *
   * @type {Array<CreateModel3D>}
   * @memberof InlineObject
   */
  items: CreateModel3D[];
}
/**
 *
 * @export
 * @interface InlineObject1
 */
export interface InlineObject1 {
  /**
   *
   * @type {Array<UpdateModel3D>}
   * @memberof InlineObject1
   */
  items: UpdateModel3D[];
}
/**
 *
 * @export
 * @interface InlineObject2
 */
export interface InlineObject2 {
  /**
   *
   * @type {Array<CreateRevision3D>}
   * @memberof InlineObject2
   */
  items: CreateRevision3D[];
}
/**
 *
 * @export
 * @interface InlineObject3
 */
export interface InlineObject3 {
  /**
   *
   * @type {Array<UpdateRevision3D>}
   * @memberof InlineObject3
   */
  items: UpdateRevision3D[];
}
/**
 *
 * @export
 * @interface InlineObject4
 */
export interface InlineObject4 {
  /**
   *
   * @type {Array<CreateAssetMapping3D>}
   * @memberof InlineObject4
   */
  items: CreateAssetMapping3D[];
}
/**
 *
 * @export
 * @interface InlineObject5
 */
export interface InlineObject5 {
  /**
   *
   * @type {Array<DeleteAssetMapping3D>}
   * @memberof InlineObject5
   */
  items: DeleteAssetMapping3D[];
}
/**
 *
 * @export
 * @interface InlineObject6
 */
export interface InlineObject6 {
  /**
   *
   * @type {Array<ServiceAccountInput>}
   * @memberof InlineObject6
   */
  items: ServiceAccountInput[];
}
/**
 *
 * @export
 * @interface InlineResponse200
 */
export interface InlineResponse200 {
  /**
   *
   * @type {URLResponse}
   * @memberof InlineResponse200
   */
  data: URLResponse;
}
/**
 * Data about how to authenticate and authorize users
 * @export
 * @interface InputProjectAuthentication
 */
export interface InputProjectAuthentication {
  /**
   *
   * @type {AzureADConfigurationDTO}
   * @memberof InputProjectAuthentication
   */
  azureADConfiguration?: AzureADConfigurationDTO;
  /**
   * List of valid domains. If left empty, any user registered with the OAuth2 provider will get access.
   * @type {Array<string>}
   * @memberof InputProjectAuthentication
   */
  validDomains?: string[];
  /**
   *
   * @type {OAuth2ConfigurationDTO}
   * @memberof InputProjectAuthentication
   */
  oAuth2Configuration?: OAuth2ConfigurationDTO;
}
/**
 * An event represents something that happened at a given interval in time, e.g a failure, a work order etc.
 * @export
 * @interface InternalEvent
 */
export interface InternalEvent {
  /**
   * External Id provided by client. Should be unique within the project
   * @type {string}
   * @memberof InternalEvent
   */
  externalId?: string;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {number}
   * @memberof InternalEvent
   */
  startTime?: number;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {number}
   * @memberof InternalEvent
   */
  endTime?: number;
  /**
   * Type of the event, e.g \'failure\'.
   * @type {string}
   * @memberof InternalEvent
   */
  type?: string;
  /**
   * Subtype of the event, e.g \'electrical\'.
   * @type {string}
   * @memberof InternalEvent
   */
  subtype?: string;
  /**
   * Textual description of the event.
   * @type {string}
   * @memberof InternalEvent
   */
  description?: string;
  /**
   * Custom, application specific metadata. String key -> String value
   * @type {{ [key: string]: string; }}
   * @memberof InternalEvent
   */
  metadata?: { [key: string]: string };
  /**
   * Asset IDs of related equipment that this event relates to.
   * @type {Array<number>}
   * @memberof InternalEvent
   */
  assetIds?: number[];
  /**
   * The source of this event.
   * @type {string}
   * @memberof InternalEvent
   */
  source?: string;
}
/**
 *
 * @export
 * @interface InternalId
 */
export interface InternalId {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof InternalId
   */
  id: number;
}
/**
 * @type LatestDataBeforeRequest
 * Describes latest query
 * @export
 */
export type LatestDataBeforeRequest =
  | LatestDataBeforeRequestMember
  | LatestDataBeforeRequestMember1;

/**
 *
 * @export
 * @interface LatestDataBeforeRequestMember
 */
export interface LatestDataBeforeRequestMember {
  /**
   * Get first datapoint before this time. Format is N[timeunit]-ago where timeunit is w,d,h,m,s. Example: \'2d-ago\' will get everything that is up to 2 days old. Can also send time in ms since epoch.
   * @type {string}
   * @memberof LatestDataBeforeRequestMember
   */
  before?: string;
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof LatestDataBeforeRequestMember
   */
  id?: number;
}
/**
 *
 * @export
 * @interface LatestDataBeforeRequestMember1
 */
export interface LatestDataBeforeRequestMember1 {
  /**
   * Get first datapoint before this time. Format is N[timeunit]-ago where timeunit is w,d,h,m,s. Example: \'2d-ago\' will get everything that is up to 2 days old. Can also send time in ms since epoch.
   * @type {string}
   * @memberof LatestDataBeforeRequestMember1
   */
  before?: string;
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof LatestDataBeforeRequestMember1
   */
  externalId?: string;
}
/**
 *
 * @export
 * @interface LatestDataBeforeRequestMember1Member
 */
export interface LatestDataBeforeRequestMember1Member {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof LatestDataBeforeRequestMember1Member
   */
  externalId?: string;
}
/**
 *
 * @export
 * @interface LatestDataBeforeRequestMemberMember
 */
export interface LatestDataBeforeRequestMemberMember {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof LatestDataBeforeRequestMemberMember
   */
  id?: number;
}
/**
 *
 * @export
 * @interface LatestDataPropertyFilter
 */
export interface LatestDataPropertyFilter {
  /**
   * Get first datapoint before this time. Format is N[timeunit]-ago where timeunit is w,d,h,m,s. Example: \'2d-ago\' will get everything that is up to 2 days old. Can also send time in ms since epoch.
   * @type {string}
   * @memberof LatestDataPropertyFilter
   */
  before?: string;
}
/**
 * Represents the current authentication status of the request
 * @export
 * @interface LoginStatusDTO
 */
export interface LoginStatusDTO {
  /**
   * The user principal, e.g john.doe@corporation.com.
   * @type {string}
   * @memberof LoginStatusDTO
   */
  user: string;
  /**
   * Whether the user is logged in or not.
   * @type {boolean}
   * @memberof LoginStatusDTO
   */
  loggedIn: boolean;
  /**
   * Name of project user belongs to
   * @type {string}
   * @memberof LoginStatusDTO
   */
  project: string;
  /**
   * Internal project id of the project
   * @type {number}
   * @memberof LoginStatusDTO
   */
  projectId: number;
  /**
   * ID of the api key making the request. This is optional and only present if an api key is used as authentication.
   * @type {number}
   * @memberof LoginStatusDTO
   */
  apiKeyId?: number;
}
/**
 *
 * @export
 * @interface LoginStatusResponse
 */
export interface LoginStatusResponse {
  /**
   *
   * @type {LoginStatusDTO}
   * @memberof LoginStatusResponse
   */
  data: LoginStatusDTO;
}
/**
 * Represents an url where the user can be redirected to sign in.
 * @export
 * @interface LoginUrlDTO
 */
export interface LoginUrlDTO {
  /**
   * The url where the user can be redirected to sign in.
   * @type {string}
   * @memberof LoginUrlDTO
   */
  url?: string;
}
/**
 *
 * @export
 * @interface LoginUrlResponse
 */
export interface LoginUrlResponse {
  /**
   *
   * @type {LoginUrlDTO}
   * @memberof LoginUrlResponse
   */
  data?: LoginUrlDTO;
}
/**
 *
 * @export
 * @interface MissingFieldError
 */
export interface MissingFieldError {
  /**
   *
   * @type {MissingFieldErrorError}
   * @memberof MissingFieldError
   */
  error: MissingFieldErrorError;
}
/**
 *
 * @export
 * @interface MissingFieldErrorError
 */
export interface MissingFieldErrorError {
  /**
   * HTTP status code
   * @type {number}
   * @memberof MissingFieldErrorError
   */
  code: number;
  /**
   * Error message
   * @type {string}
   * @memberof MissingFieldErrorError
   */
  message: string;
  /**
   * Fields that are missing.
   * @type {Array<object>}
   * @memberof MissingFieldErrorError
   */
  missingFields: object[];
}
/**
 * Some required fields are missing
 * @export
 * @interface MissingFieldObject
 */
export interface MissingFieldObject {
  /**
   * HTTP status code
   * @type {number}
   * @memberof MissingFieldObject
   */
  code: number;
  /**
   * Error message
   * @type {string}
   * @memberof MissingFieldObject
   */
  message: string;
  /**
   * Additional data
   * @type {object}
   * @memberof MissingFieldObject
   */
  extra?: any;
  /**
   * Fields that are missing.
   * @type {Array<object>}
   * @memberof MissingFieldObject
   */
  missingFields: object[];
}
/**
 *
 * @export
 * @interface Model3D
 */
export interface Model3D {
  /**
   * The name of the model.
   * @type {string}
   * @memberof Model3D
   */
  name: string;
  /**
   * The ID of the model.
   * @type {number}
   * @memberof Model3D
   */
  id: number;
  /**
   * The creation time of the resource, in milliseconds since January 1, 1970 at 00:00 UTC.
   * @type {Date}
   * @memberof Model3D
   */
  createdTime: Date;
}
/**
 *
 * @export
 * @interface Model3DList
 */
export interface Model3DList {
  /**
   *
   * @type {Array<Model3D>}
   * @memberof Model3DList
   */
  items: Model3D[];
}
/**
 * Cognite API error
 * @export
 * @interface ModelError
 */
export interface ModelError {
  /**
   * HTTP status code
   * @type {number}
   * @memberof ModelError
   */
  code: number;
  /**
   * Error message
   * @type {string}
   * @memberof ModelError
   */
  message: string;
  /**
   * List of lookup objects that have not matched any results.
   * @type {Array<{ [key: string]: object; }>}
   * @memberof ModelError
   */
  missing?: { [key: string]: object }[];
  /**
   * List of objects that violate the uniqueness constraint.
   * @type {Array<{ [key: string]: object; }>}
   * @memberof ModelError
   */
  duplicated?: { [key: string]: object }[];
}
/**
 *
 * @export
 * @interface NewApiKeyResponse
 */
export interface NewApiKeyResponse {
  /**
   *
   * @type {Array<NewApiKeyResponseDTO>}
   * @memberof NewApiKeyResponse
   */
  items: NewApiKeyResponseDTO[];
}
/**
 *
 * @export
 * @interface NewApiKeyResponseDTO
 */
export interface NewApiKeyResponseDTO {
  /**
   * Internal id for the api key
   * @type {number}
   * @memberof NewApiKeyResponseDTO
   */
  id: number;
  /**
   * id of the service account
   * @type {number}
   * @memberof NewApiKeyResponseDTO
   */
  serviceAccountId: number;
  /**
   * Time of creating in unix ms
   * @type {Date}
   * @memberof NewApiKeyResponseDTO
   */
  createdTime: Date;
  /**
   * The status of the api key.
   * @type {string}
   * @memberof NewApiKeyResponseDTO
   */
  status: NewApiKeyResponseDTOStatusEnum;
  /**
   * The api key to be used against the API
   * @type {string}
   * @memberof NewApiKeyResponseDTO
   */
  value: string;
}

/**
 * The status of the api key.
 * @export
 * @enum {string}
 */
export type NewApiKeyResponseDTOStatusEnum = 'ACTIVE' | 'DELETED';

export const NewApiKeyResponseDTOStatusEnum = {
  ACTIVE: 'ACTIVE' as NewApiKeyResponseDTOStatusEnum,
  DELETED: 'DELETED' as NewApiKeyResponseDTOStatusEnum,
};

/**
 *
 * @export
 * @interface NextCursorData
 */
export interface NextCursorData {
  /**
   * Cursor to get the next page of results (if available).
   * @type {string}
   * @memberof NextCursorData
   */
  nextCursor?: string;
}
/**
 *
 * @export
 * @interface Node3D
 */
export interface Node3D {
  /**
   * The ID of the node.
   * @type {number}
   * @memberof Node3D
   */
  id: number;
  /**
   * The index of the node in the 3D model hierarchy, starting from 0. The tree is traversed in a depth-first order.
   * @type {number}
   * @memberof Node3D
   */
  treeIndex: number;
  /**
   * The parent of the node, null if it is the root node.
   * @type {number}
   * @memberof Node3D
   */
  parentId: number | null;
  /**
   * The depth of the node in the tree, starting from 0 at the root node.
   * @type {number}
   * @memberof Node3D
   */
  depth: number;
  /**
   * The name of the node.
   * @type {string}
   * @memberof Node3D
   */
  name: string;
  /**
   * The number of descendants of the node, plus one (counting itself).
   * @type {number}
   * @memberof Node3D
   */
  subtreeSize: number;
  /**
   *
   * @type {BoundingBox3D}
   * @memberof Node3D
   */
  boundingBox: BoundingBox3D;
}
/**
 *
 * @export
 * @interface Node3DList
 */
export interface Node3DList {
  /**
   *
   * @type {Array<Node3D>}
   * @memberof Node3DList
   */
  items: Node3D[];
}
/**
 *
 * @export
 * @interface NotFoundResponse
 */
export interface NotFoundResponse {
  /**
   *
   * @type {NotFoundResponseError}
   * @memberof NotFoundResponse
   */
  error: NotFoundResponseError;
}
/**
 * Error details
 * @export
 * @interface NotFoundResponseError
 */
export interface NotFoundResponseError {
  /**
   * HTTP status code
   * @type {number}
   * @memberof NotFoundResponseError
   */
  code: number;
  /**
   * Error message
   * @type {string}
   * @memberof NotFoundResponseError
   */
  message: string;
  /**
   * Items which are not found
   * @type {Array<NotFoundResponseErrorMissingItem>}
   * @memberof NotFoundResponseError
   */
  missing: NotFoundResponseErrorMissingItem[];
}
/**
 * @type NotFoundResponseErrorMissingItem
 * Ids or ExternalIds which are not found
 * @export
 */
export type NotFoundResponseErrorMissingItem =
  | NotFoundResponseErrorMissingItemMember
  | NotFoundResponseErrorMissingItemMember1;

/**
 *
 * @export
 * @interface NotFoundResponseErrorMissingItemMember
 */
export interface NotFoundResponseErrorMissingItemMember {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof NotFoundResponseErrorMissingItemMember
   */
  id: number;
}
/**
 *
 * @export
 * @interface NotFoundResponseErrorMissingItemMember1
 */
export interface NotFoundResponseErrorMissingItemMember1 {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof NotFoundResponseErrorMissingItemMember1
   */
  externalId: string;
}
/**
 * @type NullableSinglePatchLong
 * Change that will be applied to assetId.
 * @export
 */
export type NullableSinglePatchLong =
  | NullableSinglePatchLongMember
  | NullableSinglePatchLongMember1;

/**
 *
 * @export
 * @interface NullableSinglePatchLongMember
 */
export interface NullableSinglePatchLongMember {
  /**
   *
   * @type {number}
   * @memberof NullableSinglePatchLongMember
   */
  set: number;
}
/**
 *
 * @export
 * @interface NullableSinglePatchLongMember1
 */
export interface NullableSinglePatchLongMember1 {
  /**
   *
   * @type {boolean}
   * @memberof NullableSinglePatchLongMember1
   */
  setNull: NullableSinglePatchLongMember1SetNullEnum;
}

/**
 *
 * @export
 * @enum {string}
 */
export type NullableSinglePatchLongMember1SetNullEnum = 'true';

export const NullableSinglePatchLongMember1SetNullEnum = {
  True: 'true'
};

/**
 * @type NullableSinglePatchString
 * Change that will be applied to description.
 * @export
 */
export type NullableSinglePatchString =
  | NullableSinglePatchStringMember
  | NullableSinglePatchStringMember1;

/**
 *
 * @export
 * @interface NullableSinglePatchStringMember
 */
export interface NullableSinglePatchStringMember {
  /**
   *
   * @type {string}
   * @memberof NullableSinglePatchStringMember
   */
  set: string;
}
/**
 *
 * @export
 * @interface NullableSinglePatchStringMember1
 */
export interface NullableSinglePatchStringMember1 {
  /**
   *
   * @type {boolean}
   * @memberof NullableSinglePatchStringMember1
   */
  setNull: NullableSinglePatchStringMember1SetNullEnum;
}

/**
 *
 * @export
 * @enum {string}
 */
export type NullableSinglePatchStringMember1SetNullEnum = 'true';

export const NullableSinglePatchStringMember1SetNullEnum = {
  True: 'true'
};

/**
 * Data related to generic OAuth2 authentication. Not used for Azure AD
 * @export
 * @interface OAuth2ConfigurationDTO
 */
export interface OAuth2ConfigurationDTO {
  /**
   * Login URL of OAuth2 provider. E.g https://accounts.google.com/o/oauth2/v2/auth.
   * @type {string}
   * @memberof OAuth2ConfigurationDTO
   */
  loginUrl?: string;
  /**
   * Logout URL of OAuth2 provider. E.g https://accounts.google.com/Logout.
   * @type {string}
   * @memberof OAuth2ConfigurationDTO
   */
  logoutUrl?: string;
  /**
   * URL to get access token from OAuth2 provider. E.g https://www.googleapis.com/oauth2/v4/token.
   * @type {string}
   * @memberof OAuth2ConfigurationDTO
   */
  tokenUrl?: string;
  /**
   * Client ID. You probably get this when registering your client with the OAuth2 provider.
   * @type {string}
   * @memberof OAuth2ConfigurationDTO
   */
  clientId?: string;
  /**
   * Client secret. You probably get this when registering your client with the OAuth2 provider.
   * @type {string}
   * @memberof OAuth2ConfigurationDTO
   */
  clientSecret?: string;
}
/**
 * @type ObjectPatch
 * Object change
 * @export
 */
export type ObjectPatch = ObjectPatchAddRemove | ObjectPatchSet;

/**
 *
 * @export
 * @interface ObjectPatchAddRemove
 */
export interface ObjectPatchAddRemove {
  /**
   * Add the key-value pairs. Values for existing keys will be overwritten.
   * @type {{ [key: string]: string; }}
   * @memberof ObjectPatchAddRemove
   */
  add?: { [key: string]: string };
  /**
   * Remove the key-value pairs with given keys.
   * @type {Array<string>}
   * @memberof ObjectPatchAddRemove
   */
  remove?: string[];
}
/**
 *
 * @export
 * @interface ObjectPatchSet
 */
export interface ObjectPatchSet {
  /**
   * Set the key-value pairs. All existing key-value pairs will be removed.
   * @type {{ [key: string]: string; }}
   * @memberof ObjectPatchSet
   */
  set: { [key: string]: string };
}
/**
 * Data about how to authenticate and authorize users. The authentication configuration is hidden.
 * @export
 * @interface OutputProjectAuthentication
 */
export interface OutputProjectAuthentication {
  /**
   * List of valid domains. If left empty, any user registered with the OAuth2 provider will get access.
   * @type {Array<string>}
   * @memberof OutputProjectAuthentication
   */
  validDomains?: string[];
}
/**
 * @type PostDatapoint
 * @export
 */
export type PostDatapoint = PostDatapointMember | PostDatapointMember1;

/**
 *
 * @export
 * @interface PostDatapointMember
 */
export interface PostDatapointMember {
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof PostDatapointMember
   */
  timestamp: Date;
  /**
   * The numerical data value of a numerical metric
   * @type {number}
   * @memberof PostDatapointMember
   */
  value: number;
}
/**
 *
 * @export
 * @interface PostDatapointMember1
 */
export interface PostDatapointMember1 {
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof PostDatapointMember1
   */
  timestamp: Date;
  /**
   * The string data value of a string metric
   * @type {string}
   * @memberof PostDatapointMember1
   */
  value: string;
}
/**
 *
 * @export
 * @interface PostTimeSeriesMetadataDTO
 */
export interface PostTimeSeriesMetadataDTO {
  /**
   * Externally provided id for the time series (optional but recommended)
   * @type {string}
   * @memberof PostTimeSeriesMetadataDTO
   */
  externalId?: string;
  /**
   * Human readable name of time series
   * @type {string}
   * @memberof PostTimeSeriesMetadataDTO
   */
  name?: string;
  /**
   * Whether the time series is string valued or not.
   * @type {boolean}
   * @memberof PostTimeSeriesMetadataDTO
   */
  isString?: boolean;
  /**
   * Additional metadata. String key -> String value.
   * @type {object}
   * @memberof PostTimeSeriesMetadataDTO
   */
  metadata?: object;
  /**
   * The physical unit of the time series.
   * @type {string}
   * @memberof PostTimeSeriesMetadataDTO
   */
  unit?: string;
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof PostTimeSeriesMetadataDTO
   */
  assetId?: number;
  /**
   * Whether the time series is a step series or not.
   * @type {boolean}
   * @memberof PostTimeSeriesMetadataDTO
   */
  isStep?: boolean;
  /**
   * Description of the time series.
   * @type {string}
   * @memberof PostTimeSeriesMetadataDTO
   */
  description?: string;
  /**
   * Security categories required in order to access this time series.
   * @type {Array<number>}
   * @memberof PostTimeSeriesMetadataDTO
   */
  securityCategories?: number[];
}
/**
 * Project object
 * @export
 * @interface ProjectObject
 */
export interface ProjectObject {
  /**
   * The display name of the project.
   * @type {string}
   * @memberof ProjectObject
   */
  name?: string;
  /**
   * A default group for all project users. Can be used to establish default capabilities.WARNING: this group may be logically deleted
   * @type {number}
   * @memberof ProjectObject
   */
  defaultGroupId?: number;
  /**
   *
   * @type {InputProjectAuthentication}
   * @memberof ProjectObject
   */
  authentication?: InputProjectAuthentication;
}
/**
 *
 * @export
 * @interface ProjectResponseObject
 */
export interface ProjectResponseObject {
  /**
   * The display name of the project.
   * @type {string}
   * @memberof ProjectResponseObject
   */
  name: string;
  /**
   * The url name of the project. This is used as part of API calls. It should only contain letters, digits and hyphens, as long as the hyphens are not at the start or end.
   * @type {string}
   * @memberof ProjectResponseObject
   */
  urlName: string;
  /**
   * A default group for all project users. Can be used to establish default capabilities.WARNING: this group may be logically deleted
   * @type {number}
   * @memberof ProjectResponseObject
   */
  defaultGroupId?: number;
  /**
   *
   * @type {OutputProjectAuthentication}
   * @memberof ProjectResponseObject
   */
  authentication?: OutputProjectAuthentication;
}
/**
 *
 * @export
 * @interface ProjectsAcl
 */
export interface ProjectsAcl {
  /**
   *
   * @type {CogniteprojectsAclAcl}
   * @memberof ProjectsAcl
   */
  projectsAcl?: CogniteprojectsAclAcl;
}
/**
 *
 * @export
 * @interface RawAcl
 */
export interface RawAcl {
  /**
   *
   * @type {CogniterawAclAcl}
   * @memberof RawAcl
   */
  rawAcl?: CogniterawAclAcl;
}
/**
 * A NoSQL database to store customer data.
 * @export
 * @interface RawDB
 */
export interface RawDB {
  /**
   * Unique name of a database.
   * @type {string}
   * @memberof RawDB
   */
  name: string;
}
/**
 *
 * @export
 * @interface RawDBRow
 */
export interface RawDBRow {
  /**
   * Unique row key
   * @type {string}
   * @memberof RawDBRow
   */
  key: string;
  /**
   * Row data stored as a JSON object.
   * @type {object}
   * @memberof RawDBRow
   */
  columns: any;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof RawDBRow
   */
  lastUpdatedTime: Date;
}
/**
 *
 * @export
 * @interface RawDBRowInsert
 */
export interface RawDBRowInsert {
  /**
   * Unique row key
   * @type {string}
   * @memberof RawDBRowInsert
   */
  key: string;
  /**
   * Row data stored as a JSON object.
   * @type {object}
   * @memberof RawDBRowInsert
   */
  columns: any;
}
/**
 * A row key
 * @export
 * @interface RawDBRowKey
 */
export interface RawDBRowKey {
  /**
   * Unique row key
   * @type {string}
   * @memberof RawDBRowKey
   */
  key: string;
}
/**
 * A NoSQL database table to store customer data
 * @export
 * @interface RawDBTable
 */
export interface RawDBTable {
  /**
   * Unique name of the table
   * @type {string}
   * @memberof RawDBTable
   */
  name: string;
}
/**
 * Raw row result written in CSV format, with column columnHeaders.
 * @export
 * @interface RawRowCSV
 */
export interface RawRowCSV {
  /**
   * Headers for the different columns in the response.
   * @type {Array<string>}
   * @memberof RawRowCSV
   */
  columnHeaders?: string[];
  /**
   * Rows of column values, in same order as columnHeaders.
   * @type {Array<Array>}
   * @memberof RawRowCSV
   */
  rows?: any[][];
}
/**
 *
 * @export
 * @interface RemoveField
 */
export interface RemoveField {
  /**
   *
   * @type {boolean}
   * @memberof RemoveField
   */
  setNull: boolean;
}
/**
 *
 * @export
 * @interface RevealNode3D
 */
export interface RevealNode3D {
  /**
   * The ID of the node.
   * @type {number}
   * @memberof RevealNode3D
   */
  id: number;
  /**
   * The index of the node in the 3D model hierarchy, starting from 0. The tree is traversed in a depth-first order.
   * @type {number}
   * @memberof RevealNode3D
   */
  treeIndex: number;
  /**
   * The parent of the node, null if it is the root node.
   * @type {number}
   * @memberof RevealNode3D
   */
  parentId: number | null;
  /**
   * The depth of the node in the tree, starting from 0 at the root node.
   * @type {number}
   * @memberof RevealNode3D
   */
  depth: number;
  /**
   * The name of the node.
   * @type {string}
   * @memberof RevealNode3D
   */
  name: string;
  /**
   * The number of descendants of the node, plus one (counting itself).
   * @type {number}
   * @memberof RevealNode3D
   */
  subtreeSize: number;
  /**
   *
   * @type {BoundingBox3D}
   * @memberof RevealNode3D
   */
  boundingBox: BoundingBox3D;
  /**
   * The sector the node is contained in.
   * @type {number}
   * @memberof RevealNode3D
   */
  sectorId?: number;
}
/**
 *
 * @export
 * @interface RevealNode3DList
 */
export interface RevealNode3DList {
  /**
   *
   * @type {Array<RevealNode3D>}
   * @memberof RevealNode3DList
   */
  items: RevealNode3D[];
}
/**
 *
 * @export
 * @interface RevealNode3DMember
 */
export interface RevealNode3DMember {
  /**
   * The sector the node is contained in.
   * @type {number}
   * @memberof RevealNode3DMember
   */
  sectorId?: number;
}
/**
 *
 * @export
 * @interface RevealRevision3D
 */
export interface RevealRevision3D {
  /**
   * The ID of the revision.
   * @type {number}
   * @memberof RevealRevision3D
   */
  id: number;
  /**
   * The file id.
   * @type {number}
   * @memberof RevealRevision3D
   */
  fileId: number;
  /**
   * True if the revision is marked as published.
   * @type {boolean}
   * @memberof RevealRevision3D
   */
  published: boolean;
  /**
   *
   * @type {Array<number>}
   * @memberof RevealRevision3D
   */
  rotation?: number[];
  /**
   *
   * @type {RevisionCameraProperties}
   * @memberof RevealRevision3D
   */
  camera?: RevisionCameraProperties;
  /**
   * The status of the revision.
   * @type {string}
   * @memberof RevealRevision3D
   */
  status: RevealRevision3DStatusEnum;
  /**
   * Custom, application specific metadata. String key -> String value
   * @type {{ [key: string]: string; }}
   * @memberof RevealRevision3D
   */
  metadata?: { [key: string]: string };
  /**
   * The threed file ID of a thumbnail for the revision. Use /3d/files/{id} to retrieve the file.
   * @type {number}
   * @memberof RevealRevision3D
   */
  thumbnailThreedFileId?: number;
  /**
   * The URL of a thumbnail for the revision.
   * @type {string}
   * @memberof RevealRevision3D
   */
  thumbnailURL?: string;
  /**
   * The number of asset mappings for this revision.
   * @type {number}
   * @memberof RevealRevision3D
   */
  assetMappingCount: number;
  /**
   * The creation time of the resource, in milliseconds since January 1, 1970 at 00:00 UTC.
   * @type {Date}
   * @memberof RevealRevision3D
   */
  createdTime: Date;
  /**
   *
   * @type {Array<Versioned3DFile>}
   * @memberof RevealRevision3D
   */
  sceneThreedFiles: Versioned3DFile[];
}

/**
 * The status of the revision.
 * @export
 * @enum {string}
 */
export type RevealRevision3DStatusEnum =
  | 'Queued'
  | 'Processing'
  | 'Done'
  | 'Failed';

export const RevealRevision3DStatusEnum = {
  Queued: 'Queued' as RevealRevision3DStatusEnum,
  Processing: 'Processing' as RevealRevision3DStatusEnum,
  Done: 'Done' as RevealRevision3DStatusEnum,
  Failed: 'Failed' as RevealRevision3DStatusEnum,
};

/**
 *
 * @export
 * @interface RevealRevision3DMember
 */
export interface RevealRevision3DMember {
  /**
   *
   * @type {Array<Versioned3DFile>}
   * @memberof RevealRevision3DMember
   */
  sceneThreedFiles: Versioned3DFile[];
}
/**
 *
 * @export
 * @interface RevealSector3D
 */
export interface RevealSector3D {
  /**
   * The id of the sector.
   * @type {number}
   * @memberof RevealSector3D
   */
  id: number;
  /**
   * The parent of the sector, null if it is the root sector.
   * @type {number}
   * @memberof RevealSector3D
   */
  parentId: number | null;
  /**
   * String representing the path to the sector: 0/2/6/ etc.
   * @type {string}
   * @memberof RevealSector3D
   */
  path: string;
  /**
   * The depth of the sector in the sector tree, starting from 0 at the root sector.
   * @type {number}
   * @memberof RevealSector3D
   */
  depth: number;
  /**
   *
   * @type {BoundingBox3D}
   * @memberof RevealSector3D
   */
  boundingBox: BoundingBox3D;
  /**
   * The file ID of the data file for this sector, with multiple versions supported. Use /3d/files/{id} to retrieve the file.
   * @type {Array<Versioned3DFile>}
   * @memberof RevealSector3D
   */
  threedFiles: Versioned3DFile[];
}
/**
 *
 * @export
 * @interface RevealSector3DList
 */
export interface RevealSector3DList {
  /**
   *
   * @type {Array<RevealSector3D>}
   * @memberof RevealSector3DList
   */
  items: RevealSector3D[];
}
/**
 *
 * @export
 * @interface Revision3D
 */
export interface Revision3D {
  /**
   * The ID of the revision.
   * @type {number}
   * @memberof Revision3D
   */
  id: number;
  /**
   * The file id.
   * @type {number}
   * @memberof Revision3D
   */
  fileId: number;
  /**
   * True if the revision is marked as published.
   * @type {boolean}
   * @memberof Revision3D
   */
  published: boolean;
  /**
   *
   * @type {Array<number>}
   * @memberof Revision3D
   */
  rotation?: number[];
  /**
   *
   * @type {RevisionCameraProperties}
   * @memberof Revision3D
   */
  camera?: RevisionCameraProperties;
  /**
   * The status of the revision.
   * @type {string}
   * @memberof Revision3D
   */
  status: Revision3DStatusEnum;
  /**
   * Custom, application specific metadata. String key -> String value
   * @type {{ [key: string]: string; }}
   * @memberof Revision3D
   */
  metadata?: { [key: string]: string };
  /**
   * The threed file ID of a thumbnail for the revision. Use /3d/files/{id} to retrieve the file.
   * @type {number}
   * @memberof Revision3D
   */
  thumbnailThreedFileId?: number;
  /**
   * The URL of a thumbnail for the revision.
   * @type {string}
   * @memberof Revision3D
   */
  thumbnailURL?: string;
  /**
   * The number of asset mappings for this revision.
   * @type {number}
   * @memberof Revision3D
   */
  assetMappingCount: number;
  /**
   * The creation time of the resource, in milliseconds since January 1, 1970 at 00:00 UTC.
   * @type {Date}
   * @memberof Revision3D
   */
  createdTime: Date;
}

/**
 * The status of the revision.
 * @export
 * @enum {string}
 */
export type Revision3DStatusEnum = 'Queued' | 'Processing' | 'Done' | 'Failed';

export const Revision3DStatusEnum = {
  Queued: 'Queued' as Revision3DStatusEnum,
  Processing: 'Processing' as Revision3DStatusEnum,
  Done: 'Done' as Revision3DStatusEnum,
  Failed: 'Failed' as Revision3DStatusEnum,
};

/**
 *
 * @export
 * @interface Revision3DList
 */
export interface Revision3DList {
  /**
   *
   * @type {Array<Revision3D>}
   * @memberof Revision3DList
   */
  items: Revision3D[];
}
/**
 * Initial camera position and target.
 * @export
 * @interface RevisionCameraProperties
 */
export interface RevisionCameraProperties {
  /**
   * Initial camera target.
   * @type {Array<number>}
   * @memberof RevisionCameraProperties
   */
  target?: number[];
  /**
   * Initial camera position.
   * @type {Array<number>}
   * @memberof RevisionCameraProperties
   */
  position?: number[];
}
/**
 *
 * @export
 * @interface Search
 */
export interface Search {
  /**
   * Prefix and fuzzy search on name.
   * @type {string}
   * @memberof Search
   */
  name?: string;
  /**
   * Prefix and fuzzy search on description.
   * @type {string}
   * @memberof Search
   */
  description?: string;
  /**
   * Search on name and description using wildcard search on each of the words (separated by spaces). Retrieves results where at least one word must match. Example: \'*some* *other*\'
   * @type {string}
   * @memberof Search
   */
  query?: string;
}
/**
 *
 * @export
 * @interface SecurityCategoriesAcl
 */
export interface SecurityCategoriesAcl {
  /**
   *
   * @type {CognitesecuritycategoriesAclAcl}
   * @memberof SecurityCategoriesAcl
   */
  securityCategoriesAcl?: CognitesecuritycategoriesAclAcl;
}
/**
 *
 * @export
 * @interface SecurityCategoryDTO
 */
export interface SecurityCategoryDTO {
  /**
   * Name of the security category
   * @type {string}
   * @memberof SecurityCategoryDTO
   */
  name: string;
  /**
   * Id of the security category
   * @type {number}
   * @memberof SecurityCategoryDTO
   */
  id: number;
}
/**
 *
 * @export
 * @interface SecurityCategoryResponse
 */
export interface SecurityCategoryResponse {
  /**
   *
   * @type {Array<SecurityCategoryDTO>}
   * @memberof SecurityCategoryResponse
   */
  items?: SecurityCategoryDTO[];
}
/**
 *
 * @export
 * @interface SecurityCategorySpecDTO
 */
export interface SecurityCategorySpecDTO {
  /**
   * Name of the security category
   * @type {string}
   * @memberof SecurityCategorySpecDTO
   */
  name: string;
}
/**
 * A list of objects along with possible cursors to get the next page of results
 * @export
 * @interface SecurityCategoryWithCursorResponse
 */
export interface SecurityCategoryWithCursorResponse {
  /**
   *
   * @type {Array<SecurityCategoryDTO>}
   * @memberof SecurityCategoryWithCursorResponse
   */
  items: SecurityCategoryDTO[];
  /**
   * Cursor to get the next page of results (if available).
   * @type {string}
   * @memberof SecurityCategoryWithCursorResponse
   */
  nextCursor?: string;
}
/**
 *
 * @export
 * @interface SequencesAcl
 */
export interface SequencesAcl {
  /**
   *
   * @type {CognitesequencesAclAcl}
   * @memberof SequencesAcl
   */
  sequencesAcl?: CognitesequencesAclAcl;
}
/**
 *
 * @export
 * @interface ServiceAccount
 */
export interface ServiceAccount {
  /**
   * Unique name of the service account
   * @type {string}
   * @memberof ServiceAccount
   */
  name: string;
  /**
   * List of group ids
   * @type {Array<number>}
   * @memberof ServiceAccount
   */
  groups: number[];
  /**
   *
   * @type {number}
   * @memberof ServiceAccount
   */
  id: number;
  /**
   * If this service account has been logically deleted
   * @type {boolean}
   * @memberof ServiceAccount
   */
  isDeleted: boolean;
  /**
   * Time of deletion
   * @type {Date}
   * @memberof ServiceAccount
   */
  deletedTime?: Date;
}
/**
 *
 * @export
 * @interface ServiceAccountInput
 */
export interface ServiceAccountInput {
  /**
   * Unique name of the service account
   * @type {string}
   * @memberof ServiceAccountInput
   */
  name: string;
  /**
   * List of group ids
   * @type {Array<number>}
   * @memberof ServiceAccountInput
   */
  groups?: number[];
}
/**
 *
 * @export
 * @interface ServiceAccountResponseObject
 */
export interface ServiceAccountResponseObject {
  /**
   * List of service accounts
   * @type {Array<ServiceAccount>}
   * @memberof ServiceAccountResponseObject
   */
  items: ServiceAccount[];
}
/**
 *
 * @export
 * @interface SetLongField
 */
export interface SetLongField {
  /**
   *
   * @type {number}
   * @memberof SetLongField
   */
  set: number;
}
/**
 *
 * @export
 * @interface SetModelNameField
 */
export interface SetModelNameField {
  /**
   *
   * @type {string}
   * @memberof SetModelNameField
   */
  set?: string;
}
/**
 *
 * @export
 * @interface SetObjectField
 */
export interface SetObjectField {
  /**
   *
   * @type {object}
   * @memberof SetObjectField
   */
  set?: object;
}
/**
 *
 * @export
 * @interface SetRevisionCameraProperties
 */
export interface SetRevisionCameraProperties {
  /**
   *
   * @type {RevisionCameraProperties}
   * @memberof SetRevisionCameraProperties
   */
  set?: RevisionCameraProperties;
}
/**
 *
 * @export
 * @interface SetRevisionRotation
 */
export interface SetRevisionRotation {
  /**
   *
   * @type {Array<number>}
   * @memberof SetRevisionRotation
   */
  set?: number[];
}
/**
 *
 * @export
 * @interface SetStringField
 */
export interface SetStringField {
  /**
   *
   * @type {string}
   * @memberof SetStringField
   */
  set: string;
}
/**
 * @type SinglePatch
 * Object change
 * @export
 */
export type SinglePatch = RemoveField | SetObjectField;

/**
 * @type SinglePatchLong
 * @export
 */
export type SinglePatchLong = RemoveField | SetLongField;

/**
 * Non removable string change.
 * @export
 * @interface SinglePatchRequiredString
 */
export interface SinglePatchRequiredString {
  /**
   *
   * @type {string}
   * @memberof SinglePatchRequiredString
   */
  set: string;
}
/**
 * @type SinglePatchString
 * Removable string change.
 * @export
 */
export type SinglePatchString = RemoveField | SetStringField;

/**
 *
 * @export
 * @interface SingleTokenStatusDTOResponse
 */
export interface SingleTokenStatusDTOResponse {
  /**
   *
   * @type {TokenStatusDTO}
   * @memberof SingleTokenStatusDTOResponse
   */
  data: TokenStatusDTO;
}
/**
 * @type StringOrNumber
 * @export
 */
export type StringOrNumber = number | string;

/**
 *
 * @export
 * @interface ThreedAcl
 */
export interface ThreedAcl {
  /**
   *
   * @type {CognitethreedAclAcl}
   * @memberof ThreedAcl
   */
  threedAcl?: CognitethreedAclAcl;
}
/**
 *
 * @export
 * @interface TimeSeriesAcl
 */
export interface TimeSeriesAcl {
  /**
   *
   * @type {CognitetimeseriesAclAcl}
   * @memberof TimeSeriesAcl
   */
  timeSeriesAcl?: CognitetimeseriesAclAcl;
}
/**
 *
 * @export
 * @interface TimeSeriesCreateRequest
 */
export interface TimeSeriesCreateRequest {
  /**
   *
   * @type {Array<PostTimeSeriesMetadataDTO>}
   * @memberof TimeSeriesCreateRequest
   */
  items: PostTimeSeriesMetadataDTO[];
}
/**
 *
 * @export
 * @interface TimeSeriesLookupById
 */
export interface TimeSeriesLookupById {
  /**
   * List of ID objects
   * @type {Array<TimeSeriesLookupByIdItemsItem>}
   * @memberof TimeSeriesLookupById
   */
  items: TimeSeriesLookupByIdItemsItem[];
}
/**
 * @type TimeSeriesLookupByIdItemsItem
 * @export
 */
export type TimeSeriesLookupByIdItemsItem =
  | TimeSeriesLookupByIdItemsItemMember
  | TimeSeriesLookupByIdItemsItemMember1;

/**
 *
 * @export
 * @interface TimeSeriesLookupByIdItemsItemMember
 */
export interface TimeSeriesLookupByIdItemsItemMember {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof TimeSeriesLookupByIdItemsItemMember
   */
  id?: number;
}
/**
 *
 * @export
 * @interface TimeSeriesLookupByIdItemsItemMember1
 */
export interface TimeSeriesLookupByIdItemsItemMember1 {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof TimeSeriesLookupByIdItemsItemMember1
   */
  externalId?: string;
}
/**
 * Changes will be applied to timeseries.
 * @export
 * @interface TimeSeriesPatch
 */
export interface TimeSeriesPatch {
  /**
   *
   * @type {TimeSeriesPatchUpdate}
   * @memberof TimeSeriesPatch
   */
  update: TimeSeriesPatchUpdate;
}
/**
 *
 * @export
 * @interface TimeSeriesPatchUpdate
 */
export interface TimeSeriesPatchUpdate {
  /**
   *
   * @type {NullableSinglePatchString}
   * @memberof TimeSeriesPatchUpdate
   */
  externalId?: NullableSinglePatchString;
  /**
   *
   * @type {NullableSinglePatchString}
   * @memberof TimeSeriesPatchUpdate
   */
  name?: NullableSinglePatchString;
  /**
   *
   * @type {ObjectPatch}
   * @memberof TimeSeriesPatchUpdate
   */
  metadata?: ObjectPatch;
  /**
   *
   * @type {NullableSinglePatchString}
   * @memberof TimeSeriesPatchUpdate
   */
  unit?: NullableSinglePatchString;
  /**
   *
   * @type {NullableSinglePatchLong}
   * @memberof TimeSeriesPatchUpdate
   */
  assetId?: NullableSinglePatchLong;
  /**
   *
   * @type {NullableSinglePatchString}
   * @memberof TimeSeriesPatchUpdate
   */
  description?: NullableSinglePatchString;
  /**
   *
   * @type {ArrayPatchLong}
   * @memberof TimeSeriesPatchUpdate
   */
  securityCategories?: ArrayPatchLong;
}
/**
 *
 * @export
 * @interface TimeSeriesSearchDTO
 */
export interface TimeSeriesSearchDTO {
  /**
   *
   * @type {Filter}
   * @memberof TimeSeriesSearchDTO
   */
  filter?: Filter;
  /**
   *
   * @type {Search}
   * @memberof TimeSeriesSearchDTO
   */
  search?: Search;
  /**
   * Return up to this many results.
   * @type {number}
   * @memberof TimeSeriesSearchDTO
   */
  limit?: number;
}
/**
 * @type TimeSeriesUpdate
 * @export
 */
export type TimeSeriesUpdate =
  | TimeSeriesUpdateByExternalId
  | TimeSeriesUpdateById;

/**
 *
 * @export
 * @interface TimeSeriesUpdateByExternalId
 */
export interface TimeSeriesUpdateByExternalId {
  /**
   *
   * @type {TimeSeriesPatchUpdate}
   * @memberof TimeSeriesUpdateByExternalId
   */
  update: TimeSeriesPatchUpdate;
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof TimeSeriesUpdateByExternalId
   */
  externalId: string;
}
/**
 *
 * @export
 * @interface TimeSeriesUpdateByExternalIdMember
 */
export interface TimeSeriesUpdateByExternalIdMember {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof TimeSeriesUpdateByExternalIdMember
   */
  externalId: string;
}
/**
 *
 * @export
 * @interface TimeSeriesUpdateById
 */
export interface TimeSeriesUpdateById {
  /**
   *
   * @type {TimeSeriesPatchUpdate}
   * @memberof TimeSeriesUpdateById
   */
  update: TimeSeriesPatchUpdate;
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof TimeSeriesUpdateById
   */
  id: number;
}
/**
 *
 * @export
 * @interface TimeSeriesUpdateByIdMember
 */
export interface TimeSeriesUpdateByIdMember {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof TimeSeriesUpdateByIdMember
   */
  id: number;
}
/**
 *
 * @export
 * @interface TimeSeriesUpdateRequest
 */
export interface TimeSeriesUpdateRequest {
  /**
   *
   * @type {Array<TimeSeriesUpdate>}
   * @memberof TimeSeriesUpdateRequest
   */
  items: TimeSeriesUpdate[];
}
/**
 * @type TimestampOrStringEnd
 * Get datapoints up to this time. Same format as for start. Note that when using aggregates, the end will be rounded up such that the last aggregate represents a full aggregation interval containing the original end, where the interval is the granularity unit times the granularity multiplier. For granularity 2d, the aggregation interval is 2 days, if end was originally 3 days after the start, it will be rounded to 4 days after the start.
 * @export
 */
export type TimestampOrStringEnd = Date | string;

/**
 * @type TimestampOrStringStart
 * Get datapoints after this time. Format is N[timeunit]-ago where timeunit is w,d,h,m,s. Example: \'2d-ago\' will get everything that is up to 2 days old. Can also send time in ms since epoch. Note that when using aggregates, the start time will be rounded down to a whole granularity unit (in UTC timezone). For granularity 2d it will be rounded to 0:00 AM on the same day, for 3h it will be rounded to the start of the hour, etc.
 * @export
 */
export type TimestampOrStringStart = Date | string;

/**
 *
 * @export
 * @interface TokenStatusDTO
 */
export interface TokenStatusDTO {
  /**
   * The token that was sent for validation
   * @type {string}
   * @memberof TokenStatusDTO
   */
  token: string;
  /**
   * Whether this token is valid
   * @type {boolean}
   * @memberof TokenStatusDTO
   */
  valid: boolean;
  /**
   * Whether this token has expired
   * @type {boolean}
   * @memberof TokenStatusDTO
   */
  expired: boolean;
}
/**
 * Object containing the log out URL
 * @export
 * @interface URLResponse
 */
export interface URLResponse {
  /**
   * The url to send the user to in order to log out
   * @type {string}
   * @memberof URLResponse
   */
  url: string;
}
/**
 *
 * @export
 * @interface UnrealRevision3D
 */
export interface UnrealRevision3D {
  /**
   * The ID of the revision.
   * @type {number}
   * @memberof UnrealRevision3D
   */
  id: number;
  /**
   * The file id.
   * @type {number}
   * @memberof UnrealRevision3D
   */
  fileId: number;
  /**
   * True if the revision is marked as published.
   * @type {boolean}
   * @memberof UnrealRevision3D
   */
  published: boolean;
  /**
   *
   * @type {Array<number>}
   * @memberof UnrealRevision3D
   */
  rotation?: number[];
  /**
   *
   * @type {RevisionCameraProperties}
   * @memberof UnrealRevision3D
   */
  camera?: RevisionCameraProperties;
  /**
   * The status of the revision.
   * @type {string}
   * @memberof UnrealRevision3D
   */
  status: UnrealRevision3DStatusEnum;
  /**
   * Custom, application specific metadata. String key -> String value
   * @type {{ [key: string]: string; }}
   * @memberof UnrealRevision3D
   */
  metadata?: { [key: string]: string };
  /**
   * The threed file ID of a thumbnail for the revision. Use /3d/files/{id} to retrieve the file.
   * @type {number}
   * @memberof UnrealRevision3D
   */
  thumbnailThreedFileId?: number;
  /**
   * The URL of a thumbnail for the revision.
   * @type {string}
   * @memberof UnrealRevision3D
   */
  thumbnailURL?: string;
  /**
   * The number of asset mappings for this revision.
   * @type {number}
   * @memberof UnrealRevision3D
   */
  assetMappingCount: number;
  /**
   * The creation time of the resource, in milliseconds since January 1, 1970 at 00:00 UTC.
   * @type {Date}
   * @memberof UnrealRevision3D
   */
  createdTime: Date;
  /**
   *
   * @type {Array<Versioned3DFile>}
   * @memberof UnrealRevision3D
   */
  sceneThreedFiles: Versioned3DFile[];
}

/**
 * The status of the revision.
 * @export
 * @enum {string}
 */
export type UnrealRevision3DStatusEnum =
  | 'Queued'
  | 'Processing'
  | 'Done'
  | 'Failed';

export const UnrealRevision3DStatusEnum = {
  Queued: 'Queued' as UnrealRevision3DStatusEnum,
  Processing: 'Processing' as UnrealRevision3DStatusEnum,
  Done: 'Done' as UnrealRevision3DStatusEnum,
  Failed: 'Failed' as UnrealRevision3DStatusEnum,
};

/**
 *
 * @export
 * @interface UnrealRevision3DMember
 */
export interface UnrealRevision3DMember {
  /**
   *
   * @type {Array<Versioned3DFile>}
   * @memberof UnrealRevision3DMember
   */
  sceneThreedFiles: Versioned3DFile[];
}
/**
 *
 * @export
 * @interface UpdateModel3D
 */
export interface UpdateModel3D {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof UpdateModel3D
   */
  id: number;
  /**
   *
   * @type {UpdateModel3DMemberUpdate}
   * @memberof UpdateModel3D
   */
  update?: UpdateModel3DMemberUpdate;
}
/**
 *
 * @export
 * @interface UpdateModel3DMember
 */
export interface UpdateModel3DMember {
  /**
   *
   * @type {UpdateModel3DMemberUpdate}
   * @memberof UpdateModel3DMember
   */
  update?: UpdateModel3DMemberUpdate;
}
/**
 *
 * @export
 * @interface UpdateModel3DMemberUpdate
 */
export interface UpdateModel3DMemberUpdate {
  /**
   *
   * @type {SetModelNameField}
   * @memberof UpdateModel3DMemberUpdate
   */
  name?: SetModelNameField;
}
/**
 *
 * @export
 * @interface UpdateRevision3D
 */
export interface UpdateRevision3D {
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof UpdateRevision3D
   */
  id: number;
  /**
   *
   * @type {UpdateRevision3DMemberUpdate}
   * @memberof UpdateRevision3D
   */
  update?: UpdateRevision3DMemberUpdate;
}
/**
 *
 * @export
 * @interface UpdateRevision3DMember
 */
export interface UpdateRevision3DMember {
  /**
   *
   * @type {UpdateRevision3DMemberUpdate}
   * @memberof UpdateRevision3DMember
   */
  update?: UpdateRevision3DMemberUpdate;
}
/**
 *
 * @export
 * @interface UpdateRevision3DMemberUpdate
 */
export interface UpdateRevision3DMemberUpdate {
  /**
   *
   * @type {UpdateRevision3DMemberUpdatePublished}
   * @memberof UpdateRevision3DMemberUpdate
   */
  published?: UpdateRevision3DMemberUpdatePublished;
  /**
   *
   * @type {SetRevisionRotation}
   * @memberof UpdateRevision3DMemberUpdate
   */
  rotation?: SetRevisionRotation;
  /**
   *
   * @type {SetRevisionCameraProperties}
   * @memberof UpdateRevision3DMemberUpdate
   */
  camera?: SetRevisionCameraProperties;
  /**
   *
   * @type {ObjectPatch}
   * @memberof UpdateRevision3DMemberUpdate
   */
  metadata?: ObjectPatch;
}
/**
 *
 * @export
 * @interface UpdateRevision3DMemberUpdatePublished
 */
export interface UpdateRevision3DMemberUpdatePublished {
  /**
   * True if the revision is marked as published.
   * @type {boolean}
   * @memberof UpdateRevision3DMemberUpdatePublished
   */
  set?: boolean;
}
/**
 * Request body for the updateModelRevisionThumbnail endpoint.
 * @export
 * @interface UpdateRevision3DThumbnail
 */
export interface UpdateRevision3DThumbnail {
  /**
   * File ID of thumbnail file in Files API. _Only JPEG and PNG files are supported_.
   * @type {number}
   * @memberof UpdateRevision3DThumbnail
   */
  fileId: number;
}
/**
 *
 * @export
 * @interface UploadFileMetadataResponseObject
 */
export interface UploadFileMetadataResponseObject {
  /**
   * External Id provided by client. Should be unique within the project.
   * @type {string}
   * @memberof UploadFileMetadataResponseObject
   */
  externalId?: string;
  /**
   * Name of the file.
   * @type {string}
   * @memberof UploadFileMetadataResponseObject
   */
  name: string;
  /**
   * The source of the file.
   * @type {string}
   * @memberof UploadFileMetadataResponseObject
   */
  source?: string;
  /**
   * File type. E.g. text/plain, application/pdf, ..
   * @type {string}
   * @memberof UploadFileMetadataResponseObject
   */
  mimeType?: string;
  /**
   * Custom, application specific metadata. String key -> String value
   * @type {{ [key: string]: string; }}
   * @memberof UploadFileMetadataResponseObject
   */
  metadata?: { [key: string]: string };
  /**
   *
   * @type {Array<number>}
   * @memberof UploadFileMetadataResponseObject
   */
  assetIds?: number[];
  /**
   * Javascript friendly internal ID given to the object.
   * @type {number}
   * @memberof UploadFileMetadataResponseObject
   */
  id: number;
  /**
   * Whether or not the actual file is uploaded.  This field is returned only by the API, it has no effect in a post body.
   * @type {boolean}
   * @memberof UploadFileMetadataResponseObject
   */
  uploaded: boolean;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof UploadFileMetadataResponseObject
   */
  uploadedTime?: Date;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof UploadFileMetadataResponseObject
   */
  createdTime: Date;
  /**
   * It is the number of milliseconds that have elapsed since 00:00:00 Thursday, 1 January 1970, Coordinated Universal Time (UTC), minus leap seconds.
   * @type {Date}
   * @memberof UploadFileMetadataResponseObject
   */
  lastUpdatedTime: Date;
  /**
   * The URL where the file contents should be uploaded.
   * @type {string}
   * @memberof UploadFileMetadataResponseObject
   */
  uploadUrl: string;
}
/**
 *
 * @export
 * @interface UploadFileMetadataResponseObjectMember
 */
export interface UploadFileMetadataResponseObjectMember {
  /**
   * The URL where the file contents should be uploaded.
   * @type {string}
   * @memberof UploadFileMetadataResponseObjectMember
   */
  uploadUrl: string;
}
/**
 *
 * @export
 * @interface UsersAcl
 */
export interface UsersAcl {
  /**
   *
   * @type {CogniteusersAclAcl}
   * @memberof UsersAcl
   */
  usersAcl?: CogniteusersAclAcl;
}
/**
 * The file ID of the data file for this resource, with multiple versions supported. Use /3d/files/{id} to retrieve the file.
 * @export
 * @interface Versioned3DFile
 */
export interface Versioned3DFile {
  /**
   * Version of the file format.
   * @type {number}
   * @memberof Versioned3DFile
   */
  version: number;
  /**
   * File ID. Use /3d/files/{id} to retrieve the file.
   * @type {number}
   * @memberof Versioned3DFile
   */
  fileId: number;
}
